#! /bin/bash
# postinst script for oxldapsync
#
# see: dh_installdeb(1)

set -e

prevver="$2"

# summary of how this script can be called:
#        * <postinst> 'configure' <most-recently-configured-version>
#        * <old-postinst> 'abort-upgrade' <new version>
#        * <conflictor's-postinst> 'abort-remove' 'in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> 'abort-deconfigure' 'in-favour'
#          <failed-install-package> <version> 'removing'
#          <conflicting-package> <version>
# for details, see /usr/share/doc/packaging-manual/
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the 'postinst' is called with 'abort-upgrade',
#     'abort-remove' or 'abort-deconfigure'.

init_plugins() {
        TMPFILE=`mktemp /tmp/munin-node.configure.XXXXXXXXXX`
        echo -n "Initializing plugins.."
        munin-node-configure --shell > $TMPFILE || rm -f $TMPFILE
        if [ -f $TMPFILE ] ; then
                  sh < $TMPFILE
        else
		echo "nothing to do...."
        fi
        echo "done."
        rm -f $TMPFILE
}


case "$1" in
    configure)
	init_plugins    
    ;;

    abort-upgrade|abort-deconfigure|abort-remove)
    :
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 0
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
