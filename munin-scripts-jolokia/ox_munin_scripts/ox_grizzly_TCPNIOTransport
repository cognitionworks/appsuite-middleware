#!/usr/bin/perl
#%# family=auto
#%# capabilities=autoconf

use strict;
use JMX::Jmx4Perl;
use JMX::Jmx4Perl::Request;   # Type constants are exported here

if ( $ARGV[0] and $ARGV[0] eq "autoconf")
{
    if (-e "/opt/open-xchange/bundles/com.openexchange.http.grizzly/com.openexchange.http.grizzly.jar") {
        print "yes\n";
        exit 0;
    } else {
        print "no\n";
        exit 0;
    }
}

if ( $ARGV[0] and $ARGV[0] eq "config") {
    print "graph_title Grizzly TCPNIOTransport\n";
    print "graph_args --base 1000 -l 0\n";
    print "graph_category Open Xchange\n";
    print "graph_vlabel Number\n";
    
    print "bytes-read.label bytes-read\n";
    print "bytes-read.draw LINE1\n";
    print "bytes-read.type DERIVE\n";
    print "bytes-read.min 0\n";

    print "bytes-written.label bytes-written\n";
    print "bytes-written.draw LINE1\n";
    print "bytes-written.type DERIVE\n";
    print "bytes-written.min 0\n";

    print "last-error.label last-error\n";
    print "last-error.draw LINE1\n";
    print "last-error.type DERIVE\n";
    print "last-error.min 0\n";
    
    print "open-connections-count.label open-connections-count\n";
    print "open-connections-count.draw LINE1\n";
    print "open-connections-count.type DERIVE\n";
    print "open-connections-count.min 0\n";

    print "total-connections-count.label total-connections-count\n";
    print "total-connections-count.draw LINE1\n";
    print "total-connections-count.type DERIVE\n";
    print "total-connections-count.min 0\n";

    exit 0;
}

### Settings and connection Testing

my $jmx = new JMX::Jmx4Perl(url => $ENV{oxJolokiaUrl},
user => $ENV{oxJolokiaUser},
password => $ENV{oxJolokiaPassword});

### test if a connection can be made
my $request = new JMX::Jmx4Perl::Request({type => AGENT_VERSION});
my $response = $jmx->request($request);
if ($response->is_error()){
	my $status = $response->status();
	if ($status == 404) {
		die "Link to servlet might be wrong";
	}
	elsif ($status == 401) {
		die "Credentials to login might be wrong";
	}
	else {
		die "Something went wrong ",$status;
	}
}

###

$request = new JMX::Jmx4Perl::Request(READ,
	"org.glassfish.grizzly:name=Transport,pp=/gmbal-root/HttpServer[HttpServer]/NetworkListener[NetworkListener[http-listener]],type=TCPNIOTransport",
	"bytes-read");
$response = $jmx->request($request);
if ($response->is_ok()){
	print "bytes-read.value ",$response->value(),"\n";
}

$request = new JMX::Jmx4Perl::Request(READ,
	"org.glassfish.grizzly:name=Transport,pp=/gmbal-root/HttpServer[HttpServer]/NetworkListener[NetworkListener[http-listener]],type=TCPNIOTransport",
	"bytes-written");
$response = $jmx->request($request);
if ($response->is_ok()){
	print "bytes-written.value ",$response->value(),"\n";
}

$request = new JMX::Jmx4Perl::Request(READ,
	"org.glassfish.grizzly:name=Transport,pp=/gmbal-root/HttpServer[HttpServer]/NetworkListener[NetworkListener[http-listener]],type=TCPNIOTransport",
	"last-error");
$response = $jmx->request($request);
if ($response->is_ok()){
	print "last-error.value ",$response->value(),"\n";
}

$request = new JMX::Jmx4Perl::Request(READ,
	"org.glassfish.grizzly:name=Transport,pp=/gmbal-root/HttpServer[HttpServer]/NetworkListener[NetworkListener[http-listener]],type=TCPNIOTransport",
	"open-connections-count");
$response = $jmx->request($request);
if ($response->is_ok()){
	print "open-connections-count.value ",$response->value(),"\n";
}

$request = new JMX::Jmx4Perl::Request(READ,
	"org.glassfish.grizzly:name=Transport,pp=/gmbal-root/HttpServer[HttpServer]/NetworkListener[NetworkListener[http-listener]],type=TCPNIOTransport",
	"total-connections-count");
$response = $jmx->request($request);
if ($response->is_ok()){
	print "total-connections-count.value ",$response->value(),"\n";
}
