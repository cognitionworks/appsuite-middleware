#!/usr/bin/perl
#%# family=auto
#%# capabilities=autoconf

use strict;
use JMX::Jmx4Perl;
use JMX::Jmx4Perl::Request;   # Type constants are exported here

if ( $ARGV[0] and $ARGV[0] eq "autoconf")
{
	print "yes\n";
	exit 0;
}

if ( $ARGV[0] and $ARGV[0] eq "config")
{
	print "graph_title JVM GC duration\n";
	print "graph_args --base 1000 -l 0\n";
	print "graph_category Open Xchange\n";
	print "graph_vlabel time in ms\n";

	print "a.label Copy\n";
	print "a.draw LINE1\n";

	print "b.label MarkSweepCompact\n";
	print "b.draw LINE1\n";

	print "c.label PS MarkSweep\n";
	print "c.draw LINE1\n";

	print "d.label PS Scavenge\n";
	print "d.draw LINE1\n";

	print "e.label ConcurrentMarkSweep\n";
	print "e.draw LINE1\n";

	print "f.label ParNew\n";
	print "f.draw LINE1\n";

	print "g.label G1 Old Generation\n";
	print "g.draw LINE1\n";

	print "h.label G1 Young Generation\n";
	print "h.draw LINE1\n";
	exit 0
}
									

### Settings and connection Testing

my $jmx = new JMX::Jmx4Perl(url => $ENV{oxJolokiaUrl},
user => $ENV{oxJolokiaUser},
password => $ENV{oxJolokiaPassword});

### Test if a connection can be made
my $request = new JMX::Jmx4Perl::Request({type => AGENT_VERSION});
my $response = $jmx->request($request);
if ($response->is_error()){
	my $status = $response->status();
	if ($status == 404) {
		die "Link to servlet might not be set correctly, this can be done by altering /etc/munin/plugin-conf.d/ox and setting the correct path to your jolokia servlet";
	}
	elsif ($status == 401) {
		die "Credentials to login might be not set correctly. The credentials are set inside /opt/open-xchange/etc/jolokia.properties on the OX, for munin, those need to be altered at /etc/munin/plugin-conf.d/ox";
	}
	else {
		die "Something went wrong ",$status;
	}
}

###

$request = new JMX::Jmx4Perl::Request(READ,
	"java.lang:name=Copy,type=GarbageCollector",
	"LastGcInfo",
	"duration");
$response = $jmx->request($request);
if ($response->is_ok()){
	print "a.value ",$response->value(),"\n";
}

$request = new JMX::Jmx4Perl::Request(READ,
	"java.lang:name=MarkSweepCompact,type=GarbageCollector",
	"LastGcInfo",
	"duration");
$response = $jmx->request($request);
if ($response->is_ok()){
	print "b.value ",$response->value(),"\n";
}

$request = new JMX::Jmx4Perl::Request(READ,
	"java.lang:name=PS MarkSweep,type=GarbageCollector",
	"LastGcInfo",
	"duration");
$response = $jmx->request($request);
if ($response->is_ok()){
	print "c.value ",$response->value(),"\n";
}

$request = new JMX::Jmx4Perl::Request(READ,
	"java.lang:name=PS Scavenge,type=GarbageCollector",
	"LastGcInfo",
	"duration");
$response = $jmx->request($request);
if ($response->is_ok()){
	print "d.value ",$response->value(),"\n";
}

$request = new JMX::Jmx4Perl::Request(READ,
	"java.lang:name=ConcurrentMarkSweep,type=GarbageCollector",
	"LastGcInfo",
	"duration");
$response = $jmx->request($request);
if ($response->is_ok()){
	print "e.value ",$response->value(),"\n";
}

$request = new JMX::Jmx4Perl::Request(READ,
	"java.lang:name=ParNew,type=GarbageCollector",
	"LastGcInfo",
	"duration");
$response = $jmx->request($request);
if ($response->is_ok()){
	print "f.value ",$response->value(),"\n";
}

$request = new JMX::Jmx4Perl::Request(READ,
	"java.lang:name=G1 Old Generation,type=GarbageCollector",
	"LastGcInfo",
	"duration");
$response = $jmx->request($request);
if ($response->is_ok()){
	print "g.value ",$response->value(),"\n";
}

$request = new JMX::Jmx4Perl::Request(READ,
	"java.lang:name=G1 Young Generation,type=GarbageCollector",
	"LastGcInfo",
	"duration");
$response = $jmx->request($request);
if ($response->is_ok()){
	print "h.value ",$response->value(),"\n";
}
