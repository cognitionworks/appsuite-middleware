#! /bin/bash
# postinst script for open-xchange
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#

. /opt/open-xchange/etc/oxfunctions.sh


v_setprop() {
    local prop="$1"
    local val="$2"
    local propfile="$3"
    echo setting $prop in $propfile
    ox_set_property "$prop" "$val" "$propfile"
}

v_delprop() {
    local prop="$1"
    local propfile="$2"
    echo removing $prop in $propfile
    ox_remove_property "$prop" "$propfile"
}

postFix() {
  local version=${1%-*}
  version=${version//[-.]/}

  # we're updating from pre sp4
  if [ $version -lt 650 ]; then

      # did not exist in SP3
      chown -R open-xchange: /opt/open-xchange/etc/groupware/osgi || true

      # -----------------------------------------------------------------------
      local pfile=/opt/open-xchange/etc/groupware/ox-scriptconf.sh
      ox_exists_property PROPERTIESDIR $pfile || {
	  v_setprop PROPERTIESDIR /opt/open-xchange/etc/groupware $pfile
      }
      ox_exists_property OSGIPATH $pfile || {
	  v_setprop OSGIPATH /opt/open-xchange/etc/groupware/osgi $pfile
      }
      
      # -----------------------------------------------------------------------
      local pfile=/opt/open-xchange/etc/groupware/system.properties
      ox_exists_property com.openexchange.caching.configfile $pfile || {
	  v_setprop com.openexchange.caching.configfile /opt/open-xchange/etc/groupware/cache.ccf $pfile
      }
      ox_exists_property serviceUsageInspection $pfile || {
	  v_setprop serviceUsageInspection false $pfile
      }
      ox_exists_property serviceUsageTimeout $pfile || {
	  v_setprop serviceUsageTimeout 10000 $pfile
      }
      ox_exists_property MimeTypeFile $pfile || {
	  v_setprop MimeTypeFile /opt/open-xchange/etc/groupware/mime.types $pfile
      }
      ox_exists_property MailCacheConfig $pfile || {
	  v_setprop MailCacheConfig /opt/open-xchange/etc/groupware/mailcache.ccf $pfile
      }
      ox_exists_property TidyMessages $pfile || {
	  v_setprop TidyMessages /opt/open-xchange/etc/groupware/TidyMessages.properties $pfile
      }
      ox_exists_property TidyConfiguration $pfile || {
	  v_setprop TidyConfiguration /opt/open-xchange/etc/groupware/TidyConfiguration.properties $pfile
      }
      ox_exists_property Whitelist $pfile || {
	  v_setprop Whitelist /opt/open-xchange/etc/groupware/whitelist.txt $pfile
      }

      ox_exists_property LoginInfo $pfile && {
	  v_delprop LoginInfo $pfile
      } || true
      ox_exists_property SetupLink $pfile && {
	  v_delprop SetupLink $pfile
      } || true
      ox_exists_property ConfigJumpConf $pfile && {
	  v_delprop ConfigJumpConf $pfile
      } || true
      ox_exists_property User2IMAPImpl $pfile && {
	  v_delprop User2IMAPImpl $pfile
      } || true
      ox_exists_property WEBDAVOVERRIDES $pfile && {
	  v_delprop WEBDAVOVERRIDES $pfile
      } || true
      ox_exists_property IMAPPROPERTIES $pfile && {
	  v_delprop IMAPPROPERTIES $pfile
      } || true
      ox_exists_property JAVAMAILPROPERTIES $pfile && {
	  v_delprop JAVAMAILPROPERTIES $pfile
      } || true

      # -----------------------------------------------------------------------
      local pfile=/opt/open-xchange/etc/groupware/imap.properties
      local pftemp=${pfile}.$$
      local modprops="imapSort\|imapSearch\|imapFastFetch\|imapSupportsACL\|imapTimeout\|imapConnectionTimeout\|imapAuthEnc\|maxIMAPConnectionIdleTime"
      sed -e "s;^\($modprops\);com.openexchange.imap.\1;" < $pfile > $pftemp
      if [ ! -s $pftemp ]; then
	  echo "unable to append com.openexchange.imap. to $modprops in $pfile"
	  rm -f $pftemp
      else
	  mv $pftemp $pfile
      fi
      ox_exists_property com.openexchange.imap.User2ACLImpl $pfile || {
	  v_setprop com.openexchange.imap.User2ACLImpl auto $pfile
      }
      ox_exists_property com.openexchange.imap.mboxEnabled $pfile || {
	  v_setprop com.openexchange.imap.mboxEnabled false $pfile
      }
      ox_exists_property com.openexchange.imap.blockSize $pfile || {
	  v_setprop com.openexchange.imap.blockSize 1000 $pfile
      }

      # -----------------------------------------------------------------------
      # move key/values from imap.properties to mail.properties
      local imap=/opt/open-xchange/etc/groupware/imap.properties
      local mail=/opt/open-xchange/etc/groupware/mail.properties
      ox_exists_property imapLoginType $imap && {
	  local val=$(ox_read_property imapLoginType $imap)
	  v_delprop imapLoginType $imap
	  v_setprop com.openexchange.mail.loginType $val $mail
      } || true
      ox_exists_property imapMasterPassword $imap && {
	  local val=$(ox_read_property imapMasterPassword $imap)
	  v_delprop imapMasterPassword $imap
	  v_setprop com.openexchange.mail.masterPassword $val $mail
      } || true
      ox_exists_property imapCredSrc $imap && {
	  local val=$(ox_read_property imapCredSrc $imap)
	  v_delprop imapCredSrc $imap
	  v_setprop com.openexchange.mail.credSrc $val $mail
      } || true
      ox_exists_property imapServer $imap && {
	  local val=$(ox_read_property imapServer $imap)
	  v_delprop imapServer $imap
	  v_setprop com.openexchange.mail.mailServer $val $mail
      } || true
      ox_exists_property smtpServer $imap && {
	  local val=$(ox_read_property smtpServer $imap)
	  v_delprop smtpServer $imap
	  v_setprop com.openexchange.mail.transportServer $val $mail
      } || true
      ox_exists_property mail.mime.charset $imap && {
	  local val=$(ox_read_property mail.mime.charset $imap)
	  v_delprop mail.mime.charset $imap
	  v_setprop mail.mime.charset $val $mail
      } || true
      ox_exists_property imapMessageFetchLimit $imap && {
	  local val=$(ox_read_property imapMessageFetchLimit $imap)
	  v_delprop imapMessageFetchLimit $imap
	  v_setprop com.openexchange.mail.mailFetchLimit $val $mail
      } || true
      ox_exists_property imapAttachmentDisplaySizeLimit $imap && {
	  local val=$(ox_read_property imapAttachmentDisplaySizeLimit $imap)
	  v_delprop imapAttachmentDisplaySizeLimit $imap
	  v_setprop com.openexchange.mail.attachmentDisplaySizeLimit $val $mail
      } || true
      ox_exists_property imapMaxNumOfConnections $imap && {
	  local val=$(ox_read_property imapMaxNumOfConnections $imap)
	  v_delprop imapMaxNumOfConnections $imap
	  v_setprop com.openexchange.mail.maxNumOfConnections $val $mail
      } || true
      ox_exists_property imapQuoteLineColors $imap && {
	  local val=$(ox_read_property imapQuoteLineColors $imap)
	  v_delprop imapQuoteLineColors $imap
	  v_setprop com.openexchange.mail.quoteLineColors $val $mail
      } || true
      for key in userFlagsEnabled allowNestedDefaultFolderOnAltNamespace \
	  ignoreSubscription watcherEnabled watcherFrequency watcherTime \
	  watcherShallClose smtpLocalhost smtpAuthentication setSMTPEnvelopeFrom; do
	  ox_exists_property $key $imap && {
	      local val=$(ox_read_property $key $imap)
	      v_delprop $key $imap
	      v_setprop "com.openexchange.mail.${key}" $val $mail
	  } || true
      done
      # delete non-existing params
      ox_exists_property partModifierImpl $imap && {
	  v_delprop partModifierImpl $imap
      } || true
      ox_exists_property imaps $imap && {
	  v_delprop imaps $imap
      } || true
      ox_exists_property smtps $imap && {
	  v_delprop smtps $imap
      } || true
      ox_exists_property spamEnabled $imap && {
	  v_delprop spamEnabled $imap
      } || true
      ox_exists_property imapMessageFetchLimit $imap && {
	  v_delprop imapMessageFetchLimit $imap
      } || true
      ox_exists_property imapAttachmentDisplaySizeLimit $imap && {
	  v_delprop imapAttachmentDisplaySizeLimit $imap
      } || true
  fi
}

case "$1" in
    configure)
        test -n "$2" && {
                # we are in update mode, run postFix to apply fixes
                postFix "$2"
                exit 0
        }

    ;;

    abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

touch /tmp/ox_chown_tmp_$$
chgrp open-xchange /tmp/ox_chown_tmp_$$ 2>/dev/null ||
	addgroup --system open-xchange
chown open-xchange /tmp/ox_chown_tmp_$$ 2>/dev/null || 
	adduser --system --home /opt/open-xchange --no-create-home --disabled-password \
		--ingroup open-xchange open-xchange
rm -f /tmp/ox_chown_tmp_$$

chmod 750 /var/log/open-xchange
chown open-xchange: /var/log/open-xchange
chown open-xchange: /opt/open-xchange/etc/groupware/osgi

update-rc.d open-xchange-groupware defaults > /dev/null

# if isrunning; then
#     invoke-rc.d open-xchange-groupware restart
# else
#     invoke-rc.d open-xchange-groupware start
# fi

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


