# SessionD cache
jcs.region.SessionCache=SessionLTCP
jcs.region.SessionCache.cacheattributes=org.apache.jcs.engine.CompositeCacheAttributes
jcs.region.SessionCache.cacheattributes.MaxObjects=10000000
jcs.region.SessionCache.cacheattributes.MemoryCacheName=org.apache.jcs.engine.memory.lru.LRUMemoryCache
jcs.region.SessionCache.cacheattributes.UseMemoryShrinker=true
jcs.region.SessionCache.cacheattributes.MaxMemoryIdleTimeSeconds=60
jcs.region.SessionCache.cacheattributes.ShrinkerIntervalSeconds=30
jcs.region.SessionCache.cacheattributes.MaxSpoolPerRun=500
jcs.region.SessionCache.elementattributes=org.apache.jcs.engine.ElementAttributes
jcs.region.SessionCache.elementattributes.IsEternal=false
jcs.region.SessionCache.elementattributes.MaxLifeSeconds=3600
jcs.region.SessionCache.elementattributes.IdleTime=60
# NOT APPLICABLE TO ANY AUXILIARY (NEITHER DISK, REMOTE NOR TCP)
jcs.region.SessionCache.elementattributes.IsSpool=false
jcs.region.SessionCache.elementattributes.IsRemote=false
jcs.region.SessionCache.elementattributes.IsLateral=true

# Auxiliary cache configuration for synchronizing SessionD caches in a cluster.
# The lateral cache broadcasts PUTS and REMOVALS (and possibly GETS) to other local caches.
jcs.auxiliary.SessionLTCP=org.apache.jcs.auxiliary.lateral.socket.tcp.LateralTCPCacheFactory
jcs.auxiliary.SessionLTCP.attributes=org.apache.jcs.auxiliary.lateral.socket.tcp.TCPLateralCacheAttributes
jcs.auxiliary.SessionLTCP.attributes.TcpServers=127.0.0.1:57461
jcs.auxiliary.SessionLTCP.attributes.TcpListenerPort=57462
# Define UDP discovery here, but ensure you do not specify static TCP server via 'jcs.auxiliary.SessionLTCP.attributes.TcpServers'
# jcs.auxiliary.SessionLTCP.attributes.UdpDiscoveryAddr=224.0.0.1
# jcs.auxiliary.SessionLTCP.attributes.UdpDiscoveryPort=6780
jcs.auxiliary.SessionLTCP.attributes.UdpDiscoveryEnabled=false
# Setting Receive equal to false means the cache operates in send-only mode
jcs.auxiliary.SessionLTCP.attributes.Receive=true
# Setting AllowGet equal to false would cause the auxiliary cache to return null from any get request
# or in other words it means that it can only put, i.e. send updates and remove requests
jcs.auxiliary.SessionLTCP.attributes.AllowGet=false
# We do not want to remove on remote caches rather than really send sessions to remote caches
jcs.auxiliary.SessionLTCP.attributes.IssueRemoveOnPut=false
jcs.auxiliary.SessionLTCP.attributes.FilterRemoveByHashCode=false
