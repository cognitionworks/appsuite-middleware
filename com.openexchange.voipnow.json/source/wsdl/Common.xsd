<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://4psa.com/Common.xsd/2.5.1" xmlns:xs="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://4psa.com/Common.xsd/2.5.1" elementFormDefault="qualified" id="Common">
	<xs:simpleType name="positiveInteger">
		<xs:annotation>
			<xs:documentation>Object ID</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:positiveInteger">
			<xs:whiteSpace value="collapse"/>
			<xs:totalDigits value="4"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="boolean">
		<xs:restriction base="xs:boolean">
			<xs:whiteSpace value="collapse"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="integer">
		<xs:restriction base="xs:integer"/>
	</xs:simpleType>
	<xs:simpleType name="unsignedInt">
		<xs:restriction base="xs:unsignedInt">
			<xs:whiteSpace value="collapse"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="short">
		<xs:restriction base="xs:short">
			<xs:whiteSpace value="collapse"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="unsignedShort">
		<xs:restriction base="xs:unsignedShort">
			<xs:whiteSpace value="collapse"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="double">
		<xs:restriction base="xs:double">
			<xs:whiteSpace value="collapse"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="float">
		<xs:restriction base="xs:float">
			<xs:whiteSpace value="collapse"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="emptyFloat">
		<xs:restriction base="xs:string">
			<xs:pattern value="([0-9]+)\.([0-9]+)?"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="dateTime">
		<xs:restriction base="xs:dateTime">
			<xs:whiteSpace value="collapse"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="string">
		<xs:restriction base="xs:string">
			<xs:maxLength value="255"/>
			<xs:whiteSpace value="collapse"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="text">
		<xs:restriction base="xs:string">
			<xs:whiteSpace value="preserve"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="base64">
		<xs:restriction base="xs:base64Binary">
			<xs:whiteSpace value="collapse"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ip">
		<xs:restriction base="xs:string">
			<xs:whiteSpace value="collapse"/>
			<xs:pattern
				value="([01]?\p{Nd}{1,2}|2([0-4]\p{Nd}|5[0-5]))(\.([01]?\p{Nd}{1,2}|2([0-4]\p{Nd}|5[0-5]))){3}"
			/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="rule">
		<xs:restriction base="xs:string">
			<xs:whiteSpace value="collapse"/>
			<xs:pattern value="[*XZN\-\.\[\]\d]+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="password">
		<xs:restriction base="xs:string">
			<xs:minLength value="4"/>
			<xs:maxLength value="64"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="email">
		<xs:restriction base="xs:string">
			<xs:minLength value="3"/>
			<xs:maxLength value="255"/>
			<xs:pattern
				value="[\-\+_\p{L}\p{N}\.]*@([\p{L}\p{N}][\-\p{L}\p{N}]*\.)*[\p{L}][\-\p{L}\p{N}]*\.?"
			/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="domain">
		<xs:restriction base="xs:string">
			<xs:whiteSpace value="collapse"/>
			<xs:pattern
				value="(((([a-zA-Z0-9]+)|(([a-zA-Z0-9]+)\-?)+([a-zA-Z0-9]+))\.)+(([a-zA-Z0-9]+)|(([a-zA-Z0-9]+)\-?)+([a-zA-Z0-9]+)))"
			/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="code">
		<xs:annotation>
			<xs:documentation>Two-character code type.Used for languages and countries.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="2"/>
			<xs:whiteSpace value="collapse"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="pcode">
		<xs:annotation>
			<xs:documentation>Postal/zip code type</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="10"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="unlimitedDate">
		<xs:annotation>
			<xs:documentation>Unlimited attribute on date type</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:date">
				<xs:attribute name="unlimited" type="xs:boolean" default="true"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="unlimitedUInt">
		<xs:annotation>
			<xs:documentation>unlimited attribute on integer type</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:unsignedInt">
				<xs:attribute name="unlimited" type="boolean" default="true"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="unlimitedUString">
		<xs:annotation>
			<xs:documentation>unlimited attribute on string type</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:unsignedInt">
				<xs:attribute name="unlimited" type="boolean" default="true"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="unlimitedUFloat">
		<xs:annotation>
			<xs:documentation>Unlimited attribute on float type</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:float">
				<xs:attribute name="unlimited" type="xs:boolean" default="true"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="notice">
		<xs:annotation>
			<xs:documentation>Notice type</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="message" type="text" minOccurs="0"/>
			<xs:element name="code" type="text" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="share">
		<xs:annotation>
			<xs:documentation>Share info with ID/everybody</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="ID" nillable="true" maxOccurs="unbounded"/>
			<xs:element name="everybody" type="boolean"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="delObject">
		<xs:annotation>
			<xs:documentation>Delete operation response object type</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="items" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Number of affected items</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="result" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Operation result</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="success"/>
						<xs:enumeration value="partial"/>
						<xs:enumeration value="failure"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="updateObject">
		<xs:annotation>
			<xs:documentation>Update operation response object type</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ID" type="positiveInteger" minOccurs="0" maxOccurs="10">
				<xs:annotation>
					<xs:documentation>Object ID</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="result" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Operation result</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="success"/>
						<xs:enumeration value="partial"/>
						<xs:enumeration value="failure"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="notice" type="notice" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="diskSpace">
		<xs:annotation>
			<xs:documentation>Disk space data</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="used" type="string" minOccurs="0"/>
			<xs:element name="total" type="unlimitedUString" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="advertisingTemplate">
		<xs:annotation>
			<xs:documentation>Advertisig template used for client accounts.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="GlobalDefault" type="boolean" default="false"/>
				<xs:attribute name="ResellerDefault" type="boolean" default="false"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="limit">
		<xs:annotation>
			<xs:documentation>Increase/decrease with limit for PL</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="value" type="integer"/>
			<xs:element name="increase" type="string" minOccurs="0"/>
			<xs:element name="decrease" type="string" minOccurs="0"/>
			<xs:element name="unlimited" type="boolean"/>
		</xs:choice>
	</xs:complexType>
</xs:schema>
