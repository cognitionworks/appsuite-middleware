<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns="http://4psa.com/BillingData.xsd/2.5.1" xmlns:mstns="http://4psa.com/BillingData.xsd/2.5.1" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:common="http://4psa.com/Common.xsd/2.5.1" targetNamespace="http://4psa.com/BillingData.xsd/2.5.1" elementFormDefault="qualified" id="BillingData">
	<xs:import namespace="http://4psa.com/Common.xsd/2.5.1" schemaLocation="../Common.xsd"/>
	<xs:complexType name="ChargingPlanInfo">
		<xs:annotation>
			<xs:documentation>Charging plan data</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="name" type="common:string">
				<xs:annotation>
					<xs:documentation>Charging plan name</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="default" type="common:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Set default charging plan</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:annotation>
					<xs:documentation>Outgoing routing rule</xs:documentation>
				</xs:annotation>
				<xs:element name="channelRuleID" type="common:positiveInteger" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Outgoing routing rule identifier</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="channelRule" type="common:string" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Outgoing routing rule</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:sequence>
				<xs:annotation>
					<xs:documentation>Permissions</xs:documentation>
				</xs:annotation>
				<xs:element name="allowIn" type="common:boolean" default="0" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Allow incoming calls from any network. Default value: 0 on add operation</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="allowOut" type="common:boolean" default="0" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Allow calls to public network. Default value: 0 on add operation</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="allowLocal" type="common:boolean" default="0" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Allow local calls to extensions owned by the same client like caller. Default value: 0 on add operation</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="allowExtended" type="common:boolean" default="0" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Allow extended local calls to extensions owned by other clients in the infrastructure. Default value: 0 on add operation</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
			<xs:element name="planType" type="common:string" default="prepaid" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Charging plan type: prepaid or postpaid. Default prepaid.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:sequence>
				<xs:annotation>
					<xs:documentation>For postpaid only</xs:documentation>
				</xs:annotation>
				<xs:element name="includedCreditOut" type="common:unlimitedUFloat" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Limit calls to public network to amount (monthly, resets on first day of the month)</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="includedCreditIn" type="common:unlimitedUFloat" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Limit calls from public network to amount (monthly, resets on first day of the month)</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="externalMin" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>Limit calls to public network to minutes: {minutes} in time interval {intervalID} (monthly, resets on first day of the month)</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="minutes" type="common:integer"/>
							<xs:element name="intervalID" type="common:positiveInteger" nillable="0" minOccurs="0"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:sequence>
				<xs:annotation>
					<xs:documentation>For prepaid only</xs:documentation>
				</xs:annotation>
				<xs:element name="initialCreditOut" type="common:unlimitedUFloat" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Initial credit available for outgoing calls (to any destination local or in public network)</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="initialCreditIn" type="common:unlimitedUFloat" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Initial credit available for incoming calls (for calls coming from local or public network)</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
			<xs:sequence>
				<xs:annotation>
					<xs:documentation>Charging segments</xs:documentation>
				</xs:annotation>
				<xs:element name="chargeOut" type="common:integer" default="60" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Charge outgoing calls indivisible for the first {chargeOut} seconds (applies to internal and public network calls). Default: 60 seconds.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="thenChargeOut" type="common:integer" default="10" minOccurs="0">
					<xs:annotation>
						<xs:documentation>After the first segment charge every {thenChargeOut} seconds. Default: 10 seconds.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="chargeIn" type="common:integer" default="60" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Charge incoming calls indivisible for the first {chargeIn} seconds (applies only to calls from public network) . Default: 60 seconds.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="thenChargeIn" type="common:integer" default="10" minOccurs="0">
					<xs:annotation>
						<xs:documentation>After the first segment charge every {thenChargeIn} seconds. Default: 10 seconds.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
			<xs:element name="chargeMethod" default="fixed" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Charge method. Default value: fixed.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="fixed"/>
						<xs:enumeration value="inherit"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:choice>
				<xs:annotation>
					<xs:documentation>Either of</xs:documentation>
				</xs:annotation>
				<xs:element name="fixedCharge" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Fixed prices charge method. Send only if {chargeMethod} value is fixed</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="externalIncoming" type="xs:float" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Charge incoming calls (coming from public network)</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="external" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Charge outgoing calls: {charge} /second in time interval {intervalId} (destination is in public network)</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="charge" type="xs:float"/>
										<xs:element name="intervalID" type="common:positiveInteger" nillable="0" minOccurs="0"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="local" type="xs:float" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Charge local calls to extensions (destination is owned by the same client like caller)</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="extended" type="xs:float" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Charge extended local calls to extensions (destination is owned by other clients in the infrastructure)</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="inheritedCharge" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Relative to call cost charge method. Send only if {chargeMethod} value is inherited</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="externalIncoming" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Charge incoming calls: {mulFactor} x call cost + {adjustment} /second (coming from public network)</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="mulFactor" type="xs:float"/>
										<xs:element name="adjustment" type="xs:float"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="external" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Charge outgoing calls: {mulFactor} x call cost + {adjustment} /second (destination is in public network)</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="mulFactor" type="xs:float"/>
										<xs:element name="adjustment" type="xs:float"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="local" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Charge local calls to extensions: {mulFactor} x call cost + {adjustment} /second (coming from public network)</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="mulFactor" type="xs:float"/>
										<xs:element name="adjustment" type="xs:float"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="extended" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Charge extended local calls to extensions: {mulFactor} x call cost + {adjustment} /second (destination is owned by other clients in the infrastructure)</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="mulFactor" type="xs:float"/>
										<xs:element name="adjustment" type="xs:float"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:element name="soundID" type="common:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Custom sound file played when outgoing access is blocked</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ChargingPlanList">
		<xs:annotation>
			<xs:documentation>Charging plan list data</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ID" type="common:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Charging plan ID</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="identifier" type="common:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Charging plan identifier</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="common:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Charging plan status</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="common:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Charging plan name</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="planType" type="common:string" default="prepaid" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Charging plan type: prepaid or postpaid.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="default" type="common:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Default charging plan</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="userID" type="common:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Charging plan owner ID</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="userName" type="common:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Charging plan owner name</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="scope" type="common:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Scope identifier for the enrollment server. Scope:automation is reserved for VoipNow Automation</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Credits">
		<xs:annotation>
			<xs:documentation>Charging credits definition: prepaid charging plan</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="creditIn" type="common:string" nillable="true" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Outgoing calls credit</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="creditOut" type="common:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Incoming calls credit</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderNo" type="common:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Order number</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Limits">
		<xs:annotation>
			<xs:documentation>Charging limits definition: postpaid charging plan</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="limitIn" type="common:string" nillable="true" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Outgoing money limit</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="limitOut" type="common:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Incoming money limit</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overusage" type="common:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Overusage minutes</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="orderNo" type="common:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Order number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="monthly" type="common:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>These limits should be added every month </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CreditsList">
		<xs:annotation>
			<xs:documentation>Charging plan recharge credits data</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="Credits">
				<xs:sequence>
					<xs:element name="creditID" type="common:positiveInteger">
						<xs:annotation>
							<xs:documentation>Billling plan credit ID</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="crDate" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Creation date</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="LimitsList">
		<xs:annotation>
			<xs:documentation>Charging plan recharge limits data</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="Limits">
				<xs:sequence>
					<xs:element name="limitID" type="common:positiveInteger">
						<xs:annotation>
							<xs:documentation>Charging plan limit ID</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="crDate" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Creation date</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DestinationException">
		<xs:annotation>
			<xs:documentation>Destination exception charge</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="areaCode" type="common:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Area code</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="common:string" minOccurs="0"/>
			<xs:element name="charge" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:annotation>
							<xs:documentation>Cost {initialAmount}  USD for the first {initialInterval} seconds then charge {amount} USD every  {interval}seconds. For fixed charging plans ONLY</xs:documentation>
							<xs:documentation>Cost {amount}  x call cost + {setupAmount} USD/ {interval} seconds. For inherited charging plans ONLY</xs:documentation>
						</xs:annotation>
						<xs:element name="initialAmount" type="xs:float" minOccurs="0">
							<xs:annotation>
								<xs:documentation>For fixed charging plans ONLY</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="initialInterval" type="common:integer" minOccurs="0">
							<xs:annotation>
								<xs:documentation>For fixed charging plans ONLY</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="amount" type="xs:float" minOccurs="0"/>
						<xs:element name="interval" type="common:integer" minOccurs="0"/>
						<xs:element name="setupAmount" type="xs:float" minOccurs="0">
							<xs:annotation>
								<xs:documentation>For inherited charging plans ONLY</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:choice>
				<xs:element name="chargingPackageID" type="common:positiveInteger" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Free minutes package ID</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="package" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Free minutes package</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="name" type="common:string"/>
							<xs:element name="minutes" type="xs:float"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DestinationExceptionList">
		<xs:annotation>
			<xs:documentation>Destination exception charges list</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="chargingPlanID" type="common:positiveInteger">
				<xs:annotation>
					<xs:documentation>Charging plan ID</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="exception" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Destination exception charge</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:annotation>
							<xs:documentation>Cost {initialAmount}  USD for the first {initialInterval} seconds then charge {amount} USD every  {interval}seconds </xs:documentation>
						</xs:annotation>
						<xs:element name="ID" type="common:positiveInteger">
							<xs:annotation>
								<xs:documentation>Destination exception charge ID</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="areaCode" type="common:string">
							<xs:annotation>
								<xs:documentation>Area code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="minutes" type="common:integer" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Included free minutes</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="description" type="common:string" minOccurs="0"/>
						<xs:element name="initialAmount" type="xs:float" minOccurs="0"/>
						<xs:element name="initialInterval" type="common:integer" minOccurs="0"/>
						<xs:element name="amount" type="xs:float" minOccurs="0"/>
						<xs:element name="interval" type="common:integer" minOccurs="0"/>
						<xs:element name="chargingPackageID" type="common:positiveInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Free minutes package ID</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="chargingPackage" type="common:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Free minutes package name</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="notice" type="common:notice" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ChargingPackage">
		<xs:annotation>
			<xs:documentation>Free minutes package</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="name" type="common:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Package name</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="minutes" type="common:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Included minutes</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ChargingPackageList">
		<xs:annotation>
			<xs:documentation>Free minutes packages list</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="chargingPlanID" type="common:positiveInteger">
				<xs:annotation>
					<xs:documentation>Charging plan ID</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="package" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Free minutes package list</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ID" type="common:positiveInteger">
							<xs:annotation>
								<xs:documentation>Free minutes package ID</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="name" type="common:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Package name</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="minutes" type="common:integer" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Included minutes</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
