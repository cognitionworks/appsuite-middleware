define.async("io.ox/core/test/date",["io.ox/core/date","io.ox/core/extensions"],function(a,b){var c=["Europe/Berlin"];"use strict";function d(b){var d=b.describe,e=b.it,f=b.expect;d("Date",function(){var b=c["Europe/Berlin"];e("initializes",function(){f(b).toBeTruthy()}),d("TTInfo from UTC",function(){function a(a){var c,d=Array.prototype.slice.call(arguments,1);d[1]--,c=Date.UTC.apply(Date,d),f(Boolean(b.getTTInfo(c-1).isdst)).toBe(!a),f(Boolean(b.getTTInfo(c).isdst)).toBe(a)}e("before first DST is STD"
,function(){f(b.getTTInfo(Date.UTC(1800,5)).isdst).toBeFalsy()}),e("2011-03-27 01:00 UTC changes to DST",function(){a(!0,2011,3,27,1)}),e("2011-10-30 01:00 UTC changes to STD",function(){a(!1,2011,10,30,1)}),e("2100-03-28 01:00 UTC changes to DST",function(){a(!0,2100,3,28,1)}),e("2100-10-31 01:00 UTC changes to STD",function(){a(!1,2100,10,31,1)})}),d("TTInfo from local time",function(){function a(a){var c,d=Array.prototype.slice.call(arguments,1);d[1]--,c=Date.UTC.apply(Date,d),f(Boolean(b.getTTInfoLocal
(c-1).isdst)).toBe(!a),f(Boolean(b.getTTInfoLocal(c).isdst)).toBe(a)}e("before first DST is STD",function(){f(b.getTTInfoLocal(Date.UTC(1800,5)).isdst).toBeFalsy()}),e("2011-03-27 02:00 CET changes to DST",function(){a(!0,2011,3,27,2)}),e("2011-10-30 03:00 CEST changes to STD",function(){a(!1,2011,10,30,3)}),e("2100-03-28 02:00 CET changes to DST",function(){a(!0,2100,3,28,2)}),e("2100-10-31 03:00 CEST changes to STD",function(){a(!1,2100,10,31,3)})}),d("Date arithmetic",function(){e("adds UTC time"
,function(){f((new b(2012,2,25)).addUTC(a.DAY)).toEqual(new b(2012,2,26,1))}),e("adds local time",function(){f((new b(2012,2,25)).add(a.DAY)).toEqual(new b(2012,2,26))}),e("adds months",function(){f((new b(2012,2,1)).addMonths(1)).toEqual(new b(2012,3,1))}),e("adds years",function(){f((new b(2012,2,1)).addYears(1)).toEqual(new b(2013,2,1))}),e("rounds weeks",function(){f((new b(2012,2,25,12,34)).setStartOfWeek()).toEqual(new b(2012,2,19))})}),d("Parsing",function(){_.each({"2012-01-01 as yyyy-MM-dd"
:[2012,1,1],"29.2.2012 as dd.MM.yyyy":[2012,2,29],"20120101T123456 as yyyyMMdd'T'HHmmss":[2012,1,1,12,34,56],"12 vorm. as h a":[1970,1,1,0],"12 nachm. as h a":[1970,1,1,12]},function(a,c){var d=/^(.*) as (.*)$/.exec(c);a[1]--,e(c,function(){f(b.parse(d[1],d[2]).getTime()).toEqual(b.utc(Date.UTC.apply(Date,a)))})})}),d("Formatting",function(){e("v in standard time",function(){f((new b(2012,0,1)).format("v")).toEqual("CET")}),e("v in DST",function(){f((new b(2012,5,1)).format("v")).toEqual("CEST")}
)}),d("Localized formatting",function(){var c=new b(2012,4,16,12,34);_.each([["day of week",a.DAYOFWEEK,"Mi."],["date",a.DATE,"16.5.2012"],["time",a.TIME,"12:34"],["timezone",a.TIMEZONE,"CEST"],["day of week and date",a.DAYOFWEEK_DATE,"Mi., 16.5.2012"],["date and time",a.DATE_TIME,"16.5.2012 12:34"],["time and timezone",a.TIME_TIMEZONE,"12:34 CEST"],["everything",a.FULL_DATE,"Mi., 16.5.2012 12:34 CEST"],["timezone implies time",a.DATE+a.TIMEZONE,"16.5.2012 12:34 CEST"],["day of week implies date"
,a.DAYOFWEEK+a.TIME,"Mi., 16.5.2012 12:34"]],function(a){e(a[0],function(){f(c.format(a[1])).toEqual(a[2])})})}),d("Intervals",function(){var c=new b(2012,4,16,12,34);_.each([["Timezone with same date",new b(2012,4,16,12,56),a.TIMEZONE,"CEST"],["Time with same date",new b(2012,4,16,12,56),a.TIME,"12:34-12:56"],["Time with different dates",new b(2012,5,16,12,34),a.TIME,"16.5.2012 12:34 - 16.6.2012 12:34"],["Date with same date",new b(2012,4,16,12,34),a.DATE,"16.5.2012"],["Date with different days"
,new b(2012,4,17,12,34),a.DATE,"16.-17. Mai 2012"],["Date with different months",new b(2012,5,16,12,34),a.DATE,"16. Mai - 16. Jun 2012"],["Date with different years",new b(2013,4,16,12,34),a.DATE,"16. Mai 2012 - 16. Mai 2013"]],function(a){e(a[0],function(){f(c.formatInterval(a[1],a[2])).toEqual(a[3])})}),e("Time with different timezones",function(){var c=new b(Date.UTC(2012,9,28,0,30)),d=new b(Date.UTC(2012,9,28,1,30));f(c.formatInterval(d,a.TIME_TIMEZONE)).toEqual("02:30 CEST - 02:30 CET")})})}
)}return $.when.apply($,_.map(c,a.getTimeZone)).pipe(function(){var a,e={};for(a=0;a<c.length;a++)e[c[a]]=arguments[a];c=e,b.point("test/suite").extend({id:"date",test:d})})})