define("io.ox/core/tk/view",["io.ox/core/tk/forms","io.ox/core/tk/model","io.ox/core/event"],function(a,b,c){var d=function(a){_(a||{}).each(function(a,b){this[b]=a},this),this.model=this.model||new b,this.node=this.node?$(this.node):$("<div>"),c.extend(this);var d=this,e=function(a){return _([].concat(a)).inject(function(a,b){return a.add($("[data-property="+b+"]",d.node))},$())};this.node.on("update.model",function(a,b){a.stopPropagation(),d.model.set(b.property,b.value)}),this.model.on("change"
,function(a,b,c){e(b).each(function(){$(this).triggerHandler("update.view",c)})}),this.model.on("error:invalid error:inconsistent",function(a,b){e(b.properties).each(function(){$(this).triggerHandler("invalid",[b])}),a.type==="error:inconsistent"&&console.error(b.message)}),this.initialize.apply(this,arguments)};return"use strict",d.prototype={initialize:$.noop,setModel:function(a){this.model=a},getModel:function(){return this.model},append:function(){this.node.append.apply(this.node,arguments)},
destroy:function(){this.model.off("change error:invalid error:inconsistent"),this.node.off("update.model"),this.node.empty().remove(),this.model.destroy(),this.node=this.model=null}},_.each(a,function(a,b){_.isFunction(a)&&(d.prototype[b]=function(){var b,c=[].slice.call(arguments);return c[0]=c[0]||{},c[0].model=c[0].model||this.model,b=a.apply(this,c),b})}),_.makeExtendable(d),d})