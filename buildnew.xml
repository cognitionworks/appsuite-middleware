<project name="Open-Xchange" default="default" basedir=".">

    <description>
        Open-Xchange Collaboration Suite Server
    </description>

    <!-- Customizable values -->
    <property name="destdir" value=""/>
    <property name="prefix" location="/opt/open-xchange"/>
    <property name="3rdlib" location="${prefix}/lib"/>
    <property name="log.install.dir" value="/var/log/open-xchange"/>
    <property name="distribution" value="debian"/>
    <property file="VERSION"/>
    <property file="PVERSION"/>

    <!-- Directories -->
    <property name="src.dir" location="src"/>
    <property name="build.dir" location="build"/>
    <property name="tmp.dir" value="tmp"/>
    <property name="lib.dir" location="lib"/>
    <property name="conf.dir" value="conf/groupware"/>
    <property name="i18n.dir" location="i18n"/>
    <property name="bin.dir" value="sbin"/>

    <!-- Replacements -->
    <property name="ox_buildnumber" value="${pversion}"/>
    <property name="lib.install.dir" value="${prefix}/lib"/>
    <property name="lib.install.copy.dir" location="${destdir}${lib.install.dir}"/>
    <property name="conf.install.dir" value="${prefix}/etc/groupware"/>
    <property name="conf.install.copy.dir" location="${destdir}${conf.install.dir}"/>
    <property name="log.install.copy.dir" location="${destdir}${log.install.dir}"/>
    <property name="bin.install.dir" value="${prefix}/sbin/"/>
    <property name="bin.install.copy.dir" location="${destdir}${bin.install.dir}"/>

    <!-- Replacements in Version.java.in -->
    <filterset id="version">
        <filter token="@ox_major@" value="${ox_major}" />
        <filter token="@ox_minor@" value="${ox_minor}" />
        <filter token="@ox_patch@" value="${ox_patch}" />
        <filter token="@ox_buildnumber@" value="${ox_buildnumber}" />
        <filter token="@ox_codename@" value="${ox_codename}" />
        <filter token="@ox_name@" value="${ox_name}" />
    </filterset>

    <!-- JAR names for classpath -->
    <property name="jsdkjar" value="jsdk.jar" />
    <property name="jdbcjar" value="mysql-connector-java-3.1.13-bin.jar" />
    <property name="mailjar" value="mail.jar" />
    <property name="activationjar" value="activation.jar" />
    <property name="jdomjar" value="jdom.jar" />
    <property name="jcsjar" value="jcs-1.2.7.9.2.jar" />
    <property name="concurrentjar" value="concurrent.jar" />
    <property name="loggingjar" value="commons-logging.jar" />
    <property name="jsonjar" value="json.jar" />
    <property name="fileuploadjar" value="commons-fileupload.jar" />
    <property name="iojar" value="commons-io.jar" />
    <property name="webdavjar" value="jakarta-slide-webdavlib-2.1.jar" />
    <property name="httpclientjar" value="commons-httpclient-2.0.2.jar" />
    <property name="tnefjar" value="tnef.jar" />
    <property name="springbeanjar" value="spring-beans_1.2.7.jar" />
    <property name="springcorejar" value="spring-core_1.2.7.jar" />

    <!-- Classpath -->
    <path id="project.classpath">
        <pathelement location="${3rdlib}/${jsdkjar}"/>
        <pathelement location="${3rdlib}/${jdbcjar}"/>
        <pathelement location="${3rdlib}/${mailjar}"/>
        <pathelement location="${3rdlib}/${activationjar}"/>
        <pathelement location="${3rdlib}/${jdomjar}"/>
        <pathelement location="${3rdlib}/${jcsjar}"/>
        <pathelement location="${3rdlib}/${concurrentjar}"/>
        <pathelement location="${3rdlib}/${loggingjar}"/>
        <pathelement location="${3rdlib}/${jsonjar}"/>
        <pathelement location="${3rdlib}/${fileuploadjar}"/>
        <pathelement location="${3rdlib}/${iojar}"/>
        <pathelement location="${3rdlib}/${webdavjar}"/>
        <pathelement location="${3rdlib}/${httpclientjar}"/>
        <pathelement location="${3rdlib}/${jettyjar}" />
        <pathelement location="${3rdlib}/${jbossclientjar}" />
        <pathelement location="${3rdlib}/${oxadapterjar}" />
        <pathelement location="${3rdlib}/${tnefjar}" />
        <pathelement location="${3rdlib}/${springbeanjar}" />
        <pathelement location="${3rdlib}/${springcorejar}" />
    </path>

    <!-- JARs for running server -->
    <fileset dir="${lib.dir}" id="server-jars">
        <include name="ox_server.jar"/>
        <include name="ox_languages.jar"/>
    </fileset>

    <!-- I18N Properties -->
    <property name="xgettext" value="xgettext"/>
    <fileset id="i18n.sources" dir="${src.dir}">
        <include name="com/openexchange/groupware/i18n/*.java"/>
    </fileset>
    <property name="msgfmt" value="msgfmt"/>
    <fileset id="i18n.pos" dir="${i18n.dir}">
        <include name="**/*.po"/>
    </fileset>
    <property name="java_apt" value="apt"/>

    <!-- Compile -->
    
    <target name="prepare">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${tmp.dir}"/>
        <mkdir dir="${lib.dir}"/>
    </target>

    <target name="compile" depends="prepare,patchVersionJava">
        <javac srcdir="${src.dir}" destdir="${build.dir}" debug="true"
            encoding="US-ASCII" source="1.5" compiler="javac1.5" target="1.5">
            <classpath refid="project.classpath" />
        </javac>
    </target>

    <target name="jar" depends="compile">
        <jar jarfile="${lib.dir}/ox_server.jar" basedir="${build.dir}" includes="**"/>
    </target>

    <target name="build" depends="compile,jar,create-lang-jar"/>

    <!-- Install targets -->

    <target name="installJars" depends="build">
        <mkdir dir="${lib.install.copy.dir}"/>
        <copy todir="${lib.install.copy.dir}" overwrite="true">
            <fileset refid="server-jars" />
        </copy>
    </target>

    <target name="installConfig" depends="prepare">
        <property name="patch.conf.dir" value="${tmp.dir}/${conf.dir}"/>
        <mkdir dir="${patch.conf.dir}"/>
        <copy todir="${patch.conf.dir}" overwrite="true">
            <fileset dir="${conf.dir}"/>
        </copy>
        <antcall target="patchConfigFiles">
            <param name="conf.subst.patch" value="${conf.install.dir}"/>
        </antcall>
        <mkdir dir="${conf.install.copy.dir}"/>
        <copy todir="${conf.install.copy.dir}" overwrite="true">
            <fileset dir="${patch.conf.dir}"/> 
        </copy>
    </target>

    <target name="installScripts">
        <property name="patch.bin.dir" value="${tmp.dir}/${bin.dir}"/>
        <mkdir dir="${patch.bin.dir}"/>
        <copy todir="${patch.bin.dir}" overwrite="true">
            <fileset dir="${bin.dir}"/>
        </copy>
        <antcall target="patchBinFiles">
            <param name="conf.subst.patch" value="${conf.install.dir}"/>
            <param name="lib.subst.patch" value="${lib.install.dir}"/>
        </antcall>
        <copy todir="${bin.install.copy.dir}" overwrite="true">
            <fileset dir="${patch.bin.dir}"/>
        </copy>
        <chmod perm="755" file="${bin.install.copy.dir}/open-xchange-groupware"/>
        <chmod perm="755" file="${bin.install.copy.dir}/checkConsistency"/>
        
        <copy todir="${destdir}" overwrite="true">
            <fileset dir="system"/>
            <mapper type="glob" from="*.${distribution}" to="*"/>
        </copy>
        <chmod perm="755" file="${destdir}/etc/init.d/open-xchange-groupware"/>
    </target>
    
    <target name="installExceptJars" depends="installConfig,installScripts">
        <mkdir dir="${log.install.copy.dir}"/>
    </target>

    <target name="install" depends="build,installJars,installExceptJars"/>

    <target name="default" depends="install"/>

    <target name="clean">
        <delete dir="${lib.dir}"/>
        <delete dir="${tmp.dir}"/>
        <delete dir="${build.dir}"/>
        <delete file="${src.dir}/com/openexchange/server/Version.java"/>
    </target>

    <!-- I18N Stuff -->

    <target name="check-msgfmt-executable" unless="exists_msgfmt">
        <exec executable="${msgfmt}" dir="${basedir}" failonerror="false" failifexecutionfails="false" outputproperty="garbage" resultproperty="result_msgmft">
            <arg value="--help" />
        </exec>
        <condition property="exists_msgfmt">
            <equals arg1="0" arg2="${result_msgmft}" />
        </condition>
        <antcall target="show-missing-msgfmt"/>
    </target>

    <target name="check-xgettext-executable" unless="exists_xgettext">
        <exec executable="${xgettext}" dir="${basedir}" failonerror="false" failifexecutionfails="false" outputproperty="garbage" resultproperty="result_xgettext">
            <arg value="--help"/>
        </exec>
        <condition property="exists_xgettext">
            <equals arg1="0" arg2="${result_xgettext}"/>
        </condition>
        <antcall target="show-missing-xgettext"/>
    </target>

    <target name="check_apt_executable" unless="exists_apt">
        <exec executable="${java_apt}" dir="${basedir}" failonerror="false" failifexecutionfails="false" outputproperty="garbage" resultproperty="result_apt">
            <arg value="-help" />
        </exec>
        <condition property="exists_apt">
            <equals arg1="0" arg2="${result_apt}" />
        </condition>
        <antcall target="show-missing-apt"></antcall>
    </target>
    
    <target name="check-i18n-executables" depends="check-msgfmt-executable,check-xgettext-executable,check_apt_executable">
        <antcall target="show-missing-executables"/>
    </target>

    <target name="show-missing-executables" depends="show-missing-xgettext,show-missing-msgfmt,show-missing-apt"/>
    
    <target name="show-missing-xgettext" unless="exists_xgettext">
        <echo message="xgettext can't be found. POT files won't be generated." />
    </target>

    <target name="show-missing-msgfmt" unless="exists_msgfmt">
        <echo message="msgfmt can't be found. Language Bundle won't be generated." />
    </target>
                
    <target name="show-missing-apt" unless="exists_apt">
        <echo message="apt can't be found. Error codes cannot be read from server code." />
    </target>

    <target name="create-lang-jar" depends="check-msgfmt-executable,prepare" if="exists_msgfmt">
        <!-- FIXME Discover Files and languages dynamically -->
        <exec executable="${msgfmt}" dir="${basedir}">
            <arg line="--java2 -d ${build.dir} -r com.openexchange.groupware.i18n.ServerMessages -l de_DE ${i18n.dir}/de_DE/server.de_DE.po" />
        </exec>
        <exec executable="${msgfmt}" dir="${basedir}">
            <arg line="--java2 -d ${build.dir} -r com.openexchange.groupware.i18n.ServerMessages -l de ${i18n.dir}/de_DE/server.de_DE.po" />
        </exec>
        <jar jarfile="${lib.dir}/ox_languages.jar" basedir="${build.dir}"
            includes="com/openexchange/groupware/i18n/ServerMessages*" />
    </target>
    
    <!-- Templates -->

    <target name="patchVersionJava">
        <copy file="${src.dir}/com/openexchange/server/Version.java.in"
            tofile="${src.dir}/com/openexchange/server/Version.java"
            overwrite="yes">
            <filterset refid="version"/>
        </copy>
    </target>

    <target name="patchConfigFiles">
        <fail message="Define conf.subst.patch." unless="conf.subst.patch"/>
        <antcall target="patchFileLoggingProperties"/>
        <antcall target="patchScriptConf"/>
        <antcall target="patchSessiondProperties"/>
        <antcall target="patchSystemProperties"/>
    </target>

    <target name="patchFileLoggingProperties">
        <move tofile="${patch.conf.dir}/file-logging.properties"
            file="${patch.conf.dir}/file-logging.properties.in" overwrite="true"/>
        <replace file="${patch.conf.dir}/file-logging.properties">
            <replacefilter token="@serverlogfile@" value="${log.install.dir}/open-xchange.log"/>
        </replace>
    </target>

    <target name="patchScriptConf">
        <move tofile="${patch.conf.dir}/ox-scriptconf.sh" file="${patch.conf.dir}/ox-scriptconf.sh.in" overwrite="true"/>
        <replace file="${patch.conf.dir}/ox-scriptconf.sh">
            <replacefilter token="@systemproperties@" value="${conf.subst.patch}/system.properties"/>
              <replacefilter token="@loggingproperties@" value= "${conf.subst.patch}/file-logging.properties"/>
        </replace>
    </target>
    
    <target name="patchSessiondProperties">
        <move tofile="${patch.conf.dir}/sessiond.properties" file="${patch.conf.dir}/sessiond.properties.in" overwrite="true"/>
        <replace file="${patch.conf.dir}/sessiond.properties">
            <replacefilter token="@sessiondport@" value="33333"/>
        </replace>
    </target>

    <target name="patchSystemProperties">
        <move tofile="${patch.conf.dir}/system.properties" file="${patch.conf.dir}/system.properties.in" overwrite="true"/>
        <replace file="${patch.conf.dir}/system.properties">
            <replacefilter token="@oxgroupwaresysconfdir@" value="${conf.subst.patch}"/>
        </replace>
    </target>

    <target name="patchBinFiles">
        <fail message="Define conf.subst.patch" unless="conf.subst.patch"/>
        <fail message="Define lib.subst.patch" unless="lib.subst.patch"/>
        <antcall target="patchConsistencyStart"/>
        <antcall target="patchGroupwareStart"/>
    </target>

	<target name="patchConsistencyStart">
        <move tofile="${patch.bin.dir}/checkConsistency" file="${patch.bin.dir}/checkConsistency.in" overwrite="true"/>
		<replace file="${patch.bin.dir}/checkConsistency">
	  		<replacefilter token="@oxfunctions@" value="${conf.subst.patch}/oxfunctions.sh"/>
	  		<replacefilter token="@oxscriptconf@" value="${conf.subst.patch}/ox-scriptconf.sh"/>
  		    <replacefilter token="@prefix@" value="${prefix}"/>
		  	<replacefilter token="@consolelogfile@" value= "${log.install.dir}/open-xchange-console.log"/>
	  		<replacefilter token="@jdbcjar@"	value="${lib.subst.patch}/${jdbcjar}"/>
	  		<replacefilter token="@mailjar@"	value="${lib.subst.patch}/${mailjar}"/>
	  		<replacefilter token="@activationjar@" value="${lib.subst.patch}/${activationjar}"/>
	  		<replacefilter token="@jdomjar@"	value="${lib.subst.patch}/${jdomjar}"/>
	  		<replacefilter token="@jsdkjar@"	value="${lib.subst.patch}/${jsdkjar}"/>
	  		<replacefilter token="@jcsjar@"	value="${lib.subst.patch}/${jcsjar}"/>
	  		<replacefilter token="@concurrentjar@"	value="${lib.subst.patch}/${concurrentjar}"/>
	  		<replacefilter token="@loggingjar@"	value="${lib.subst.patch}/${loggingjar}"/>
	  		<replacefilter token="@jsonjar@"	value="${lib.subst.patch}/${jsonjar}"/>
	  		<replacefilter token="@fileuploadjar@" value="${lib.subst.patch}/${fileuploadjar}"/>
	  		<replacefilter token="@iojar@" value="${lib.subst.patch}/${iojar}" />
	  		<replacefilter token="@webdavjar@" value="${lib.subst.patch}/${webdavjar}" />
	  		<replacefilter token="@httpclientjar@" value="${lib.subst.patch}/${httpclientjar}" />
			<replacefilter token="@jbossclientjar@" value="${lib.subst.patch}/${jbossclientjar}" />
			<replacefilter token="@oxadapterjar@" value="${lib.subst.patch}/${oxadapterjar}" />
	  		<replacefilter token="@oxgroupwarelibdir@"	value="${lib.subst.patch}"/>
		</replace>
	</target>

	<target name="patchGroupwareStart">
        <move tofile="${patch.bin.dir}/open-xchange-groupware" file="${patch.bin.dir}/open-xchange-groupware.in" overwrite="true"/>
		<replace file="${patch.bin.dir}/open-xchange-groupware">
	  		<replacefilter token="@oxfunctions@" value="${conf.subst.patch}/oxfunctions.sh"/>
	  		<replacefilter token="@oxscriptconf@"    value="${conf.subst.patch}/ox-scriptconf.sh"/>
	  		<replacefilter token="@prefix@" value="${prefix}"/>
		  	<replacefilter token="@consolelogfile@" value= "${log.install.dir}/open-xchange-console.log"/>
	  		<replacefilter token="@jdbcjar@"	value="${lib.subst.patch}/${jdbcjar}"/>
	  		<replacefilter token="@mailjar@"	value="${lib.subst.patch}/${mailjar}"/>
	  		<replacefilter token="@activationjar@" value="${lib.subst.patch}/${activationjar}"/>
	  		<replacefilter token="@jdomjar@"	value="${lib.subst.patch}/${jdomjar}"/>
	  		<replacefilter token="@jsdkjar@"	value="${lib.subst.patch}/${jsdkjar}"/>
	  		<replacefilter token="@jcsjar@"	value="${lib.subst.patch}/${jcsjar}"/>
	  		<replacefilter token="@concurrentjar@"	value="${lib.subst.patch}/${concurrentjar}"/>
	  		<replacefilter token="@loggingjar@"	value="${lib.subst.patch}/${loggingjar}"/>
	  		<replacefilter token="@jsonjar@"	value="${lib.subst.patch}/${jsonjar}"/>
	  		<replacefilter token="@fileuploadjar@" value="${lib.subst.patch}/${fileuploadjar}"/>
	  		<replacefilter token="@iojar@" value="${lib.subst.patch}/${iojar}" />
	  		<replacefilter token="@webdavjar@" value="${lib.subst.patch}/${webdavjar}" />
	  		<replacefilter token="@httpclientjar@" value="${lib.subst.patch}/${httpclientjar}" />
			<replacefilter token="@jbossclientjar@" value="${lib.subst.patch}/${jbossclientjar}" />
			<replacefilter token="@oxadapterjar@" value="${lib.subst.patch}/${oxadapterjar}" />
			<replacefilter token="@tnefjar@" value="${lib.subst.patch}/${tnefjar}"/>
		  	<replacefilter token="@springcorejar@" value= "${lib.subst.patch}/${springcorejar}"/>
		  	<replacefilter token="@springbeanjar@" value= "${lib.subst.patch}/${springbeanjar}"/>
	  		<replacefilter token="@oxgroupwarelibdir@"	value="${lib.subst.patch}"/>
	  	</replace>
	</target>

</project>