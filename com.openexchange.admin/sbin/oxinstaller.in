#!/bin/bash
#
#
#   OPEN-XCHANGE legal information
#
#   All intellectual property rights in the Software are protected by
#   international copyright laws.
#
#
#   In some countries OX, OX Open-Xchange, open xchange and OXtender
#   as well as the corresponding Logos OX Open-Xchange and OX are registered
#   trademarks of the Open-Xchange, Inc. group of companies.
#   The use of the Logos is not covered by the GNU General Public License.
#   Instead, you are allowed to use these Logos according to the terms and
#   conditions of the Creative Commons License, Version 2.5, Attribution,
#   Non-commercial, ShareAlike, and the interpretation of the term
#   Non-commercial applicable to the aforementioned license is published
#   on the web site http://www.open-xchange.com/EN/legal/index.html.
#
#   Please make sure that third-party modules and libraries are used
#   according to their respective licenses.
#
#   Any modifications to this package must retain all copyright notices
#   of the original copyright holder(s) for the original code used.
#
#   After any such modifications, the original and derivative code shall remain
#   under the copyright of the copyright holder(s) and/or original author(s)per
#   the Attribution and Assignment Agreement that can be located at
#   http://www.open-xchange.com/EN/developer/. The contributing author shall be
#   given Attribution for the derivative code and a license granting use.
#
#    Copyright (C) 2004-2006 Open-Xchange, Inc.
#    Mail: info@open-xchange.com
#
#
#    This program is free software; you can redistribute it and/or modify it
#    under the terms of the GNU General Public License, Version 2 as published
#    by the Free Software Foundation.
#
#    This program is distributed in the hope that it will be useful, but
#    WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
#    or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
#    for more details.
#
#    You should have received a copy of the GNU General Public License along
#    with this program; if not, write to the Free Software Foundation, Inc., 59
#    Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
#


OXFUNCTIONS=@oxfunctions@
ADMINCONF=@absoxconfdir@
CONFIGDBDUMP=@configdbdump@
OXDBDUMP=@oxdbdump@

test -f $OXFUNCTIONS || {
        echo "missing common shell functions file"
        exit 1
}
test -f $CONFIGDBDUMP || {
        echo "missing $CONFIGDBDUMP"
        exit 1
}
test -f $OXDBDUMP || {
        echo "missing $OXDBDUMP"
        exit 1
}

. $OXFUNCTIONS

# some defaults
OXDB_USER=openexchange
OXDB_USER_LONG=oxdb-user
OXDB_PASS=
OXDB_PASS_LONG=oxdb-pass
OXDB_HOST=localhost
OXDB_HOST_LONG=oxdb-host
OXDB_PORT=3306
OXDB_PORT_LONG=oxdb-port
OXADMIN_PASS=
OXADMIN_PASS_LONG=admin-pass
MAIL_DOMAIN=
MAIL_DOMAIN_LONG=maildomain

MUSTOPTS="OXDB_PASS OXADMIN_PASS MAIL_DOMAIN"
LONGOPTS='$OXDB_USER_LONG:,$OXDB_PASS_LONG:,$OXDB_HOST_LONG:,$OXDB_PORT_LONG:,$OXADMIN_PASS_LONG:,$MAIL_DOMAIN_LONG:'

pwcrypt() {
    export PW=$1
    perl -e 'print crypt($ENV{PW}, pack("C2",(int(rand 26)+65),(int(rand 26)+65)));'
    unset PW
}

usage() {
    echo
    echo "$0 currently knows the following parameters:"
    echo
    local lopts=$(echo $LONGOPTS | sed -e 's/[:,]/ /g')
    printf '%-30s | %s\n' "Parameter" "Default value"
    echo "------------------------------------------------------------"
    for opt in $lopts; do
	local rvar=${opt%_LONG}
	local default=$(eval echo $rvar)
	local lopt=$(eval echo $opt)
	#echo $opt $rvar $default $lopt
	printf '%-30s | %s\n' "--$lopt" $default
    done
    echo
    echo
    echo
cat<<EOF
Example:

  $0 --$OXDB_PASS_LONG=secret --$OXADMIN_PASS_LONG=secret --$MAIL_DOMAIN_LONG example.com
EOF
    echo
}

TEMP=$(POSIXLY_CORRECT=true getopt -o ap:h --long "$(eval echo $LONGOPTS),help" -- "$@")
eval set -- "$TEMP"

while true; do
    case "$1" in
	--$OXDB_USER_LONG)
	    OXDB_USER=$2
	    shift 2
	    ;;
	--$OXDB_PASS_LONG)
	    OXDB_PASS=$2
	    shift 2
	    ;;
	--$OXDB_HOST_LONG)
	    OXDB_HOST=$2
	    shift 2
	    ;;
	-p|--$OXDB_PORT_LONG)
	    OXDB_PORT=$2
	    shift 2
	    ;;
	--$OXADMIN_PASS_LONG)
	    OXADMIN_PASS=$2
	    shift 2
	    ;;
	--$MAIL_DOMAIN_LONG)
	    MAIL_DOMAIN=$2
	    shift 2
	    ;;
	-h|--help)
	    usage
	    shift
	    ;;
	--)
	    shift
	    break
	    ;;
	*)
	    die "Internal error!"
	    exit 1
	    ;;
    esac
done

# generic parameter checking
for opt in $MUSTOPTS; do
    opt_var=$(eval echo \$$opt)
    opt_var_long=$(eval echo \$${opt}_LONG)
    opt_var_values=$(eval echo \$${opt}_VALUES)
    if [ -z "$opt_var" ]; then
	die "missing required option --$opt_var_long"
    fi
    if [ -n "$opt_var_values" ]; then
	found=
	for val in $opt_var_values; do
	    if [ "$val" == "$opt_var" ]; then
		found=$val
	    fi
	done
	if [ -z "$found" ]; then
	    die "\"$opt_var\" is not a valid option to --$opt_var_long"
	fi
    fi
done

if [ "$USER" != "root" ]; then
    die "need to be root in order to setup the system"
fi

echo -n "initializing database"

CONFIGDB=configdb
OXDB=open-xchange-db
FILESPOOLPATH=/var/opt/open-xchange/filespool

cat<<EOF | mysql
drop database if exists \`${CONFIGDB}\`;
drop database if exists \`${OXDB}\`;
GRANT ALL PRIVILEGES ON *.* TO '$OXDB_USER'@'%' IDENTIFIED BY '$OXDB_PASS' WITH GRANT OPTION;
create database \`${CONFIGDB}\`;
create database \`${OXDB}\`;
EOF

cat $CONFIGDBDUMP | \
    sed -e "s/@OXDB_USER@/$OXDB_USER/" \
        -e "s/@OXDB_PASS@/$OXDB_PASS/" \
        -e "s;@FILESPOOLPATH@;$FILESPOOLPATH;" | \
    mysql -h $OXDB_HOST -P $OXDB_PORT -u $OXDB_USER -p${OXDB_PASS} ${CONFIGDB}

ADMIN_CRYPT=$(pwcrypt "$OXADMIN_PASS")
cat $OXDBDUMP | \
    sed -e "s:@ADMINPW@:$ADMIN_CRYPT:" \
        -e "s/@MAIL_DOMAIN@/$MAIL_DOMAIN/" | \
    mysql -h $OXDB_HOST -P $OXDB_PORT -u $OXDB_USER -p${OXDB_PASS} ${OXDB}

echo " done"
