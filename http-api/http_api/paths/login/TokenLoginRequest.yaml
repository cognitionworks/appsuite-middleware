/login?action=tokenLogin:
  post:
    operationId: doTokenLogin
    tags:
      - Login
    summary: Login for a very short living session.
    description: >
      This request allows every possible client to create a very short living
      session. This session can then be transferred to any other client
      preferably a browser entering then the normal web interface. Then the
      sessions life time will be extended equally to every other session.


      Compared to the login mechanism using the random token, this request is
      more secure because two tokens are used. One of these tokens is only known
      to the client and one is generated by the server. Only the combination of
      both tokens allows to use the session. The combination of both tokens must
      be done by the client creating the session.


      **DISCLAIMER:** This request MUST NOT be used by some server side
      instance. If some server side instance uses this request to create a
      session for a browser on some client machine, then you have to transfer
      the full URL with server and client token over some connection to the
      client. This creates a **VULNERABILITY** if this is done. The token login
      method is only secure if this request is already sent from the same
      machine that later runs the browser using the created session.
    parameters:
      - in: query
        name: authId
        description: >
          Identifier for tracing every single login request passed between
          different systems in a cluster.

          The value should be some token that is unique for every login request.
          This parameter must be

          given as URL parameter and not inside the body of the POST request.
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/gblQueryParamLanguage'
    responses:
      '200':
        description: >
          In case `jsonResponse=true`, it is returned a JSON object. Otherwise a
          redirect to the web UI.

          The URL of the web UI is either taken from the given parameter or from
          the configured default

          of the backend. This redirect will only contain the server side token.
          The client side token

          sent in the request must be appended by the client creating the
          session. The final URL must

          have the form redirect_URL&clientToken=token. Both tokens are
          necessary to use the session and

          both tokens must match. Otherwise the session is terminated. In case
          of errors the responsible

          fields in the response are filled (see [Error
          handling](#error-handling)).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenLoginResponse'
          text/html:
            schema:
              $ref: '#/components/schemas/TokenLoginResponse'
    requestBody:
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            title: doTokenLoginBody
            properties:
              login:
                description: The login information.
                type: string
              password:
                description: >-
                  The password (MUST be placed in the request body, otherwise
                  the login request will be denied).
                type: string
                format: password
              clientToken:
                description: >-
                  Client side identifier for accessing the session later. The
                  value should be some token that is unique for every login
                  request.
                type: string
              client:
                description: >-
                  Identifier of the client using the HTTP/JSON interface. This
                  is for statistic evaluations what clients are used with
                  Open-Xchange.
                type: string
              version:
                description: >-
                  Version of the HTTP/JSON interface client. Only for statistic
                  evaluations.
                type: string
              staySignedIn:
                description: >
                  Cookies will be persisted if user choses to stay signed in.
                type: boolean
              uiWebPath:
                description: >
                  Defines another path on the web server where the UI is
                  located. If this parameter is not

                  defined the configured default of the backend is used.
                type: string
              clientIP:
                description: >-
                  IP address of the client host for that the session is created.
                  If this parameter is not specified the IP address of the HTTP
                  client doing this request is used.
                type: string
              clientUserAgent:
                description: >
                  Value of the User-Agent header of the client host for that the
                  session is created. If this

                  parameter is not specified the User-Agent of the current HTTP
                  client doing this request is used.
                type: string
              jsonResponse:
                description: >-
                  ’True’ or ’false’ (default). Defines the returned data type as
                  JSON. Default `false` will return a redirect.
                type: boolean
                default: false
            required:
              - login
              - password
              - clientToken
              - client
              - version
