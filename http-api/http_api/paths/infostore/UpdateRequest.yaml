/infostore?action=update:
  put:
    operationId: updateInfoItem
    tags:
      - Infostore
    summary: Updates an infoitem.
    description: >
      Updates an infoitem's data. This request cannot change or add files.
      Therefore it

      is necessary to use the `POST` method.
    parameters:
      - $ref: '#/components/parameters/gblQueryParamSession'
      - in: query
        name: id
        description: Object ID of the infoitem that shall be updated.
        required: true
        schema:
          type: string
      - in: query
        name: timestamp
        description: >-
          Timestamp of the last update of the infoitem. If the infoitem was
          modified after the specified timestamp, then the update must fail.
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: pushToken
        description: The client's push token to restrict the generated drive event
        required: false
        schema:
          type: string
    responses:
      '200':
        description: >
          A JSON object with the object ID of the updated infoitem. In case of
          errors the responsible fields in the response are

          filled (see [Error handling](#error-handling)).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InfoItemUpdateResponse'
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InfoItemBody'
      description: >-
        A JSON object containing a field `file` with the modified fields of the
        infoitem's data. It is possible to let added object permission entities
        be notified about newly shared files. In that case add a "notification"
        object.
      required: true
  post:
    operationId: updateInfoItemAdvanced
    tags:
      - Infostore
    summary: Updates an infoitem.
    description: >
      Updates an infoitem's data and file. The normal request body must be
      placed as form-data using the

      content-type `multipart/form-data`. The form field `json` contains the
      infoitem's data while the file

      must be placed in a file field named `file` (see also [File
      uploads](#file-uploads)).
    parameters:
      - $ref: '#/components/parameters/gblQueryParamSession'
      - in: query
        name: id
        description: Object ID of the infoitem that shall be updated.
        required: true
        schema:
          type: string
      - in: query
        name: timestamp
        description: >-
          Timestamp of the updated infoitem. If the infoitem was modified after
          the specified timestamp, then the update must fail.
        required: true
        schema:
          type: integer
          format: int64
      - in: query
        name: offset
        description: >-
          Optionally sets the start offset in bytes where to append the data to
          the document, must be equal to the actual document's length. Only
          available if the underlying File storage account supports the
          "RANDOM_FILE_ACCESS" capability.
        required: false
        schema:
          type: integer
      - in: query
        name: pushToken
        description: The client's push token to restrict the generated drive event
        required: false
        schema:
          type: string
    responses:
      '200':
        description: >
          A HTML page as described in [File uploads](#file-uploads) containing
          the object ID of the infoitem or errors if some occurred.
        content:
          text/html:
            schema:
              type: string
    requestBody:
      content:
        multipart/form-data:
          schema:
            type: object
            title: updateInfoItemAdvancedBody
            properties:
              json:
                description: >-
                  Represents the normal request body as JSON string containing
                  the infoitem's data (See InfoItemBody model of the
                  [newInfoItem](#infostore/createInfoItem) request). Only
                  modified fields must be specified but at least "{}".
                type: string
                default: '{}'
              file:
                description: The metadata as per `<input type="file" />`.
                type: string
                format: binary
            required:
              - json
              - file
