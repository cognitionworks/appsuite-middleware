/mail?action=search:
  put:
    operationId: searchMails
    tags:
      - Mail
    summary: Searches for mails.
    security: 
        - session: []      
        - oauth:
          - read_mails    
    parameters:
      - $ref: '#/components/parameters/gblQueryParamMailFolder'
      - $ref: '#/components/parameters/gblQueryParamMailColumns'
      - $ref: '#/components/parameters/gblQueryParamMailHeaders'
      - $ref: '#/components/parameters/gblQueryParamMailUnseen'
      - $ref: '#/components/parameters/gblQueryParamMailDeleted'
      - in: query
        name: sort
        description: >-
          The identifier of a column which determines the sort order of the
          response or the string “thread” to return thread-sorted messages. If
          this parameter is specified and holds a column number, then the
          parameter order must be also specified. Note: Applies only to
          root-level messages.
        required: false
        schema:
          type: string
      - in: query
        name: order
        description: >-
          "asc" if the response entires should be sorted in the ascending order,
          "desc" if the response entries should be sorted in the descending
          order. If this parameter is specified, then the parameter sort must be
          also specified. Note: Applies only to root-level messages.
        required: false
        schema:
          type: string
    responses:
      '200':
        description: >
          'A JSON object containing an array with matching mails. Mails are
          represented by arrays. The elements of each array contain the

          information specified by the corresponding identifiers in the
          `columns` parameter. Not IMAP: with timestamp. In case of errors the
          responsible fields in the

          response are filled (see [Error handling](#error-handling)).'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailsResponse'
    requestBody:
      content:
        application/json:
          schema:
            type: string
      description: >
        A JSON object describing the search term as described in [Advanced
        search](#advanced-search). Example:

        `{"filter":["and",["=",
        {"field":"to"},"test1@example.com"],["not",["=",{"attachment":"name"},"document.pdf"]]]}`

        which represents 'to = "test1@example.com" AND NOT from =
        "test2@example.com"'. Available field names are

        `from`, `to`, `cc`, `bcc`, `subject`, `received_date`, `sent_date`,
        `size`, `flags`, `content`, `content_type`, `disp`, and `priority`.
      required: true
