/mail?action=new:
  post:
    operationId: sendMail
    tags:
      - Mail
    summary: Sends a mail.
    security: 
        - session: []
        - oauth:
          - write_mails    
    description: >
      The request accepts file fields in upload form that denote referenced
      files that are going to be appended

      as attachments.

      For "text/plain" mail bodies, the JSON boolean field "raw" may be
      specified inside the body's JSON

      representation to signal that the text content shall be kept as-is;
      meaning to keep all formatting

      intact.
    parameters:
      - in: query
        name: lineWrapAfter
        description: >-
          An integer value specifying the line-wrap setting (only effective for
          plain-text content); if absent the setting is taken from user's mail
          settings.
        required: false
        schema:
          type: integer
    requestBody:
      content:
        multipart/form-data:
          schema:
            type: object
            title: sendMailBody
            properties:
              json_0:
                description: >
                  'Contains the rudimentary mail as JSON object as described in
                  [Detailed mail data](#detailed-mail-data) with just its
                  message body

                  (as html content) defined in nested JSON array `attachments`
                  and its header data (from, to,

                  subject, etc.). The field "content_type" defines whether the
                  mail ought to be sent as plain text

                  ("text/plain"), as html ("text/html") or as
                  multipart/alternative ("ALTERNATIVE"). Sending a mail

                  requires some special fields inside JSON mail object. The
                  field "infostore_ids" defines a JSON

                  array of infostore document ID(s) that ought to be appended to
                  this mail as attachments. The field

                  "msgref" indicates the ID of the referenced original mail.
                  Moreover the field "sendtype" indicates

                  the type of the message: <br> 0 (normal new mail),<br> 1 (a
                  reply mail, field `msgref` must be present),<br>

                  2 (a forward mail, field `msgref` must be present),<br> 3
                  (draft edit operation, field `msgref` must be

                  present in order to delete previous draft message since e.g.
                  IMAP does not support changing/replacing

                  a message but requires a delete-and-insert sequence),<br> 4
                  (transport of a draft mail, field `msgref`

                  must be present),<br> 6 (signals that user intends to send out
                  a saved draft message and expects the draft

                  message (referenced by `msgref` field) being deleted after
                  successful transport).' 
                type: string
                enum:
                  - 0 (new mail)
                  - 1 (reply mail)
                  - 2 (forward mail)
                  - 3 (draft edit)
                  - 4 (draft transport)
                  - 6 (draft transport and delete)
            required:
              - json_0          
    responses:
      '200':
        description: >
          A HTML page containing the object ID of the newly created mail or in
          case of errors an error object (see [File uploads](#file-uploads) as
          an example).
        content:
          text/html:
            schema:
              type: string
      '401':
        $ref: '#/components/responses/OAuth_unauthorized'
      '403':
        $ref: '#/components/responses/OAuth_insufficient_scope'              
  put:
    operationId: sendOrSaveMail
    tags:
      - Mail
    summary: >-
      Sends or saves a mail as MIME data block
      ([RFC822](https://tools.ietf.org/html/rfc822)).
    security: 
        - session: []
        - oauth:
          - write_mails      
    parameters:
      - in: query
        name: folder
        description: >
          In case the mail should not be sent out, but saved in a specific
          folder, the "folder" parameter

          can be used. If the mail should be sent out to the recipient, the
          "folder" parameter must not be

          included and the mail is stored in the folder "Sent Items".
        required: false
        schema:
          type: string
      - in: query
        name: flags
        description: >
          In case the mail should be stored with status "read" (e.g. mail has
          been read already in the client

          inbox), the parameter "flags" has to be included. If no `folder`
          parameter is specified, this parameter

          must not be included. For information about mail flags see [Mail
          data](#/definitions/MailData) model.
        required: false
        schema:
          type: string
    requestBody:
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary
      description: The mail as MIME data block
      required: true          
    responses:
      '200':
        description: >
          A JSON object containing the folder ID and the object ID of the mail.
          In case of errors the

          responsible fields in the response are filled (see [Error
          handling](#error-handling)).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailDestinationResponse'
      '401':
        $ref: '#/components/responses/OAuth_unauthorized'
      '403':
        $ref: '#/components/responses/OAuth_insufficient_scope'              