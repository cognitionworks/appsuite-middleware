A scenario table can be called from another script or scenario table.  Think of the table below as a callable script.

|scenario|Login|user|with password|password|giving message|message?|and status|status?|
|enter|$user|into|username|field|
|enter|$password|into|password|field|
|$message=|login|
|$status=|login status|

You can invoke it from another script table just as you would if it were a fixture.
This makes the fixture polymorphic with respect to the script table.
The return values of the script are marked with ?.

|script|
|start|login driver|
|check|Login|bob|with password|xyzzy|giving message|Welcome Bob|and status|>0|
|check|Login|bill|with password|qqbbc|giving message|Invalid Password|and status|-1|

Or you can use the output symbol name instead of the return value as follows:

|script|
|start|login driver|
|Login|bob|with password|xyzzy|giving message and status|
|check|$message|Welcome Bob|
|check|$status|>0|

If you don't like the clutter of the keywords:

|scenario|Login|user||password||message?||status?|
|enter|$user|into|username|field|
|enter|$password|into|password|field|
|$message=|login|
|$status=|login status|

Note the blank cell between the arguments.

|script|
|start|login driver|
|check|Login|bob||xyzzy||Welcome bob||>0|
|check|Login|bill||qqbbc||Invalid Password||-1|
