A small change to the syntax of a script table can let it act like a decision table fixture.  The decision table column heads are simply listed after the word "scenario".  They act like symbols as far as the script is concerned.

The scenario provides its own setup and teardown.  Is this appropriate?



!|scenario|Wiki text is translated|wiki_text|translated_text?|
|start clean fitnesse instance|
|check|create page|NewPage|with text|start:$wiki_text:end|true|
|$html=|request page|NewPage|
|$translated_text=|extract from|$html|between|start:|and|:end|
|shutdown fitnesse|

The driver for the scenario has to be set up before it can be invoked.  This makes the driver polymorphic with respect to the scenario!

|script|
|start|fitnesse pages|

The decision table doesn't know where it gets the fixture from.  So it's polymorphic too.  You can use a standard SLIM fixture on the SUT,
or you can !include an scenario.  So the fixture is polymorphic with respect to the decision table.

!|Wiki text is translated|
|wiki_text|translated_text?|
|''text''|<i>text</i>|
|'''text'''|<b>text</b>|


