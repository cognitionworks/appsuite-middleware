This time, we use the pre-defined setup, because doing all this by hand would be quite a hassle: Telling this system where the server is located, what users exist and what passwords they have...

!include CommonSetup

First, we create a start folder for our move. A folder has a reference name so we can reference it by that later on. Here, we omit the folder name itself. As default, the reference name is used. It is always necessary to mention both the type of module (tasks, calendar...) and the parent folder.

!|Table:CreateFolder|
| start_folder   |
| parent         | module |
| /Public folders| tasks  |

Then, we do the same thing again for our destination folder.

!|Table:CreateFolder|
| destination_folder   |
| parent         | module |
| /Public folders| tasks  |

Then we create a task in the start folder.

!|Table:CreateTask|
| My movable task |
|folder      | title |
|start_folder| My movable task |

Now we make sure it really is in that folder:

!|Table:VerifyTask|
| My movable task |
| folder             | title           |
| start_folder       | My movable task |

Now we are ready to move it. To do so, we add another attribute called "destination". This is one of the attributes that are not specified in the HTTP-API. 

!|Table:MoveTask     |
| My movable task    |
| destination        |
| destination_folder |

After all of that, we make sure our task arrived in the correct folder.

!|Table:VerifyTask   |
| My movable task    |
| folder             | title           |
| destination_folder | My movable task |

In the end, we call our clean-up helper to get rid of the folders and the task we created.
 
!include CommonTearDown

