# Configuration file for Swift file storages


# This file provides the configuration of all file storages based on the
# OpenStack Swift API. Each connected storage is identified by a "filestore ID",
# which refers to the authority part of the URI configured  in the "uri" column
# in the "filestore" table of the config database
# (previously registered using "./registerfilestore -t [filestoreID]").
#
# For each configured filestore, an own set of the properties may be defined,
# replacing [filestoreID] with the actual identifier. Refer to the following
# template for available configuration options, or further down for a simple
# example.


# == Template ================================================================

# Specifies the protocol to be used for network communication (http or https)
# Required.
#
# Default: https
com.openexchange.filestore.swift.[filestoreID].protocol=https

# Specifies the API end-point pairs to be used. At least one host must be provided.
# Multiple hosts can be specified as comma-separated list; e.g. "my1.clouddrive.invalid, my2.clouddrive.invalid"
# Required.
#
# No default value
com.openexchange.filestore.swift.[filestoreID].hosts=

# The path consisting of API version and tenant identifier; e.g. "/v1/MyFS_aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"
# Required.
#
# No default value
com.openexchange.filestore.swift.[filestoreID].path=

# Specifies the user name to use for authentication.
# Required.
#
# No default value
com.openexchange.filestore.swift.[filestoreID].userName=

# Specifies the tenant name to use for authentication.
# Required.
#
# No default value
com.openexchange.filestore.swift.[filestoreID].tenantName=

# Specifies the authentication type & value to use for authentication against Identity API v2.0;
# see (http://developer.openstack.org/api-ref-identity-v2.html)
# Required.
#
# Password-based authentication:
#  com.openexchange.filestore.swift.myswift.authType=password
#  com.openexchange.filestore.swift.myswift.authValue=mysecret
#
# Token-based/API-key-based authentication:
#  com.openexchange.filestore.swift.myswift.authType=token
#  com.openexchange.filestore.swift.myswift.authValue=myapikey
#
# Rackspace API-key authentication:
#  com.openexchange.filestore.swift.myswift.authType=raxkey
#  com.openexchange.filestore.swift.myswift.authValue=myrackspaceapikey
#
# No default value
com.openexchange.filestore.swift.[filestoreID].authType=
com.openexchange.filestore.swift.[filestoreID].authValue=

# The URL for the Identity API v2.0 end-point; e.g. "https://identity.api.mycloud.invalid/v2.0/tokens"
# Not needed in case "authType" is set to "raxkey" (implicitly set to "https://identity.api.rackspacecloud.com/v2.0/tokens").
# Required (for "authType" different from "raxkey")
#
# No default value.
com.openexchange.filestore.swift.[filestoreID].identityUrl=

# The max. number of concurrent HTTP connections that may be established with the swift
# endpoints. If you have specified more than one hosts, this setting should be configured
# so that maxConnectionsPerHost < maxConnections <= n * maxConnectionsPerHost.
#
# Default: 100
com.openexchange.filestore.swift.[filestoreID].maxConnections=100

# The max. number of concurrent HTTP connections that may be established with a certain
# swift endpoint.
#
# Default: 100
com.openexchange.filestore.swift.[filestoreID].maxConnectionsPerHost=100

# The connection timeout in milliseconds. If establishing a new HTTP connection to a certain
# host, it is blacklisted until it is considered available again. A periodic heartbeat task
# that tries to read the namespace configuration (<protocol>://<host>/<path>/.conf) decides
# whether an endpoint is considered available again.
#
# Default: 5000
com.openexchange.filestore.swift.[filestoreID].connectionTimeout=5000

# The socket read timeout in milliseconds. If waiting for the next expected TCP packet exceeds
# this value, the host is blacklisted until it is considered available again. A periodic heartbeat
# task that tries to read the namespace configuration (<protocol>://<host>/<path>/.conf) decides
# whether an endpoint is considered available again.
#
# Default: 15000
com.openexchange.filestore.swift.[filestoreID].socketReadTimeout=15000

# Hosts can get blacklisted if the client considers them to be unavailable. All hosts on the
# blacklist are checked periodically if they are available again and are then removed from the
# blacklist if so. A host is considered available again if the namespace configuration file
# (<protocol>://<host>/<path>/.conf) can be requested without any error. This setting specifies
# the interval in milliseconds between two heartbeat runs. The above specified timeouts must be
# taken into account for specifying a decent value, as every heartbeat run might block until a
# timeout happens for every still unavailable host.
#
# Default: 60000
com.openexchange.filestore.swift.[filestoreID].heartbeatInterval=60000


# == Specific File Stores go here ============================================

# As an example, the following lines configure a Swift object store with the
# swift API accessible via "https://storage101.fake.clouddrive.invalid/v1/MossoCloudFS_123456",
# referenced by the URI "swift://myswift" in the configuration database, previously registered using
# "./registerfilestore -t swift://myswift":

# com.openexchange.filestore.swift.myswift.protocol=https
# com.openexchange.filestore.swift.myswift.hosts=storage101.fake.clouddrive.invalid
# com.openexchange.filestore.swift.myswift.path=/v1/MossoCloudFS_123456
# com.openexchange.filestore.swift.myswift.userName=jane.doe
# com.openexchange.filestore.swift.myswift.authValue=apikey:123dabf5784b4f59aec9409fd1d4c456
# com.openexchange.filestore.swift.myswift.maxConnections=100
# com.openexchange.filestore.swift.myswift.maxConnectionsPerHost=50
# com.openexchange.filestore.swift.myswift.connectionTimeout=1000
# com.openexchange.filestore.swift.myswift.socketReadTimeout=1000
# com.openexchange.filestore.swift.myswift.heartbeatInterval=10000
