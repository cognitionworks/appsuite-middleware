<project name="com.openexchange.report.client" default="default" basedir=".">

	<!-- Customizable values -->
	<property name="destdir" value="" />
	<property name="prefix" value="/opt/open-xchange" />
	
	<!-- Constants -->
	<property name="project.name" value="com.openexchange.report.client"/>

	<property name="tmp.dir" value="tmp" />

	<property name="version" value="6.12.0.0" />
	<property name="bundle.name" value="${project.name}.jar" />
	<property name="composite.name" value="open-xchange-report-client-${version}" />
    <property name="etcdir"  value="etc"/>
	<property name="oxconfdir" value="etc/admindaemon"/>
	
    <!-- Bundle dependencies -->
    <property name="commonBundle" value="com.openexchange.common"/>
	
	<!-- Install Constants -->
	<property name="bundlesdir" value="${prefix}/bundles" />
	<property name="bundle.d" value="${prefix}/etc/groupware/osgi/bundle.d" />
	
    <!-- Replacements -->
    <property name="common.conf.install.dir" value="${prefix}/etc"/>
    <property name="conf.install.dir" value="${common.conf.install.dir}/groupware"/>
    <property name="conf.install.copy.dir" location="${destdir}${conf.install.dir}"/>

	<!-- JAR names for classpath -->
	<property name="serverjar" value="com.openexchange.server.jar" />
	<property name="adminjar" value="com.openexchange.admin.jar"/>
	<property name="adminpluginhostingjar" value="open_xchange_admin_plugin_hosting.jar"/>

	<!-- non-osgi jars -->
	<property name="json" value="json.jar"/>
	
    <filterset id="pathsubst">
        <filter token="oxprefix"          value="${prefix}"/>
        <filter token="oxfunctions"       value="${prefix}/${etcdir}/oxfunctions.sh"/>
        <filter token="oxscriptconf"      value="${prefix}/${oxconfdir}/ox-admin-scriptconf.sh"/>
    </filterset>
	
	<!-- Classpath -->
	<path id="project.classpath">
	     <pathelement location="${bundlesdir}/${commonBundle}/lib/${json}"/>
		<pathelement location="${bundlesdir}/${serverjar}" />
		<pathelement location="${bundlesdir}/${adminjar}" />
		<pathelement location="${bundlesdir}/${adminpluginhostingjar}" />
	</path>

	<!-- Compile -->
	<target name="prepare">
		<mkdir dir="${output..}" />
		<mkdir dir="${tmp.dir}" />
	</target>

	<target name="compile" depends="prepare">
		<javac srcdir="${source..}" destdir="${output..}" debug="true" encoding="US-ASCII" source="1.5" compiler="javac1.5" target="1.5">
			<classpath refid="project.classpath" />
		</javac>
	</target>

	<target name="jar" depends="prepare,compile">
		<jar jarfile="${tmp.dir}/${bundle.name}" manifest="META-INF/MANIFEST.MF">
			<fileset dir="${output..}" />
		</jar>
	</target>

	<!-- Install targets -->	
    <target name="installInclude">
		<mkdir dir="${destdir}/${bundle.d}" />
		<echo file="${destdir}/${bundle.d}/${Bundle-SymbolicName}.ini" 
			message="${bundlesdir}/${bundle.name}@start${line.separator}" />
    </target>
	
	<target name="installJar" depends="jar,installInclude">
		<mkdir dir="${destdir}/${bundlesdir}" />
		<copy todir="${destdir}/${bundlesdir}">
			<fileset dir="${tmp.dir}">
				<include name="${bundle.name}" />
			</fileset>
		</copy>
	</target>
	
    <target name="install" depends="replacer,installJar"/>

	<!-- Replace targets -->	
	
    <target name="replacer">
        <copy todir="." overwrite="true">
            <mapper type="glob" from="*.in" to="*"/>
            <fileset dir="."/>
            <filterset refid="pathsubst"/>
        </copy>
    </target>
	
    <target name="default" depends="install"/>
	
	<!-- Dist -->
	<target name="dist" depends="clean">
		<property name="dist-package" value="dist-package" />
		<delete dir="${dist-package}" />
		<mkdir dir="${dist-package}/${composite.name}" />
		<copy todir="${dist-package}/${composite.name}">
			<fileset dir=".">
				<exclude name="**${dist-package}/**" />
				<exclude name="**debian/**" />
				<exclude name="**CVS/**" />
				<exclude name="Todo" />
			</fileset>
		</copy>
		<tar destfile="../${composite.name}.tar.gz" basedir="${dist-package}" includes="${composite.name}/" compression="gzip" />
		<!-- dpkg-source does not like anything else -->
		<delete dir="${dist-package}" />
	</target>

	<target name="clean">
		<delete dir="${output..}" />
		<delete dir="${tmp.dir}" />
	</target>

</project>
