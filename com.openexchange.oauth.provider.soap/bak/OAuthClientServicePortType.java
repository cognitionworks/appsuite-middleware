package com.openexchange.oauth.provider.soap;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.7.12
 * 2015-02-04T12:05:13.275+01:00
 * Generated source version: 2.7.12
 *
 */
@WebService(targetNamespace = "http://soap.provider.oauth.openexchange.com", name = "OAuthClientServicePortType")
@XmlSeeAlso({ObjectFactory.class})
public interface OAuthClientServicePortType {

    @WebResult(name = "return", targetNamespace = "http://soap.provider.oauth.openexchange.com")
    @Action(input = "urn:updateClient", output = "urn:updateClientResponse", fault = {@FaultAction(className = OAuthClientServiceException_Exception.class, value = "urn:updateClientOAuthClientServiceException")})
    @RequestWrapper(localName = "updateClient", targetNamespace = "http://soap.provider.oauth.openexchange.com", className = "com.openexchange.oauth.provider.soap.UpdateClient")
    @WebMethod(action = "urn:updateClient")
    @ResponseWrapper(localName = "updateClientResponse", targetNamespace = "http://soap.provider.oauth.openexchange.com", className = "com.openexchange.oauth.provider.soap.UpdateClientResponse")
    public com.openexchange.oauth.provider.soap.Client updateClient(
        @WebParam(name = "clientId", targetNamespace = "http://soap.provider.oauth.openexchange.com")
        java.lang.String clientId,
        @WebParam(name = "clientData", targetNamespace = "http://soap.provider.oauth.openexchange.com")
        com.openexchange.oauth.provider.soap.ClientData clientData
    ) throws OAuthClientServiceException_Exception;

    @WebResult(name = "return", targetNamespace = "http://soap.provider.oauth.openexchange.com")
    @Action(input = "urn:unregisterClient", output = "urn:unregisterClientResponse", fault = {@FaultAction(className = OAuthClientServiceException_Exception.class, value = "urn:unregisterClientOAuthClientServiceException")})
    @RequestWrapper(localName = "unregisterClient", targetNamespace = "http://soap.provider.oauth.openexchange.com", className = "com.openexchange.oauth.provider.soap.UnregisterClient")
    @WebMethod(action = "urn:unregisterClient")
    @ResponseWrapper(localName = "unregisterClientResponse", targetNamespace = "http://soap.provider.oauth.openexchange.com", className = "com.openexchange.oauth.provider.soap.UnregisterClientResponse")
    public java.lang.Boolean unregisterClient(
        @WebParam(name = "clientId", targetNamespace = "http://soap.provider.oauth.openexchange.com")
        java.lang.String clientId
    ) throws OAuthClientServiceException_Exception;

    @WebResult(name = "return", targetNamespace = "http://soap.provider.oauth.openexchange.com")
    @Action(input = "urn:enableClient", output = "urn:enableClientResponse", fault = {@FaultAction(className = OAuthClientServiceException_Exception.class, value = "urn:enableClientOAuthClientServiceException")})
    @RequestWrapper(localName = "enableClient", targetNamespace = "http://soap.provider.oauth.openexchange.com", className = "com.openexchange.oauth.provider.soap.EnableClient")
    @WebMethod(action = "urn:enableClient")
    @ResponseWrapper(localName = "enableClientResponse", targetNamespace = "http://soap.provider.oauth.openexchange.com", className = "com.openexchange.oauth.provider.soap.EnableClientResponse")
    public java.lang.Boolean enableClient(
        @WebParam(name = "clientId", targetNamespace = "http://soap.provider.oauth.openexchange.com")
        java.lang.String clientId
    ) throws OAuthClientServiceException_Exception;

    @WebResult(name = "return", targetNamespace = "http://soap.provider.oauth.openexchange.com")
    @Action(input = "urn:registerClient", output = "urn:registerClientResponse", fault = {@FaultAction(className = OAuthClientServiceException_Exception.class, value = "urn:registerClientOAuthClientServiceException")})
    @RequestWrapper(localName = "registerClient", targetNamespace = "http://soap.provider.oauth.openexchange.com", className = "com.openexchange.oauth.provider.soap.RegisterClient")
    @WebMethod(action = "urn:registerClient")
    @ResponseWrapper(localName = "registerClientResponse", targetNamespace = "http://soap.provider.oauth.openexchange.com", className = "com.openexchange.oauth.provider.soap.RegisterClientResponse")
    public com.openexchange.oauth.provider.soap.Client registerClient(
        @WebParam(name = "client", targetNamespace = "http://soap.provider.oauth.openexchange.com")
        com.openexchange.oauth.provider.soap.ClientData client
    ) throws OAuthClientServiceException_Exception;

    @WebResult(name = "return", targetNamespace = "http://soap.provider.oauth.openexchange.com")
    @Action(input = "urn:getClientById", output = "urn:getClientByIdResponse", fault = {@FaultAction(className = OAuthClientServiceException_Exception.class, value = "urn:getClientByIdOAuthClientServiceException")})
    @RequestWrapper(localName = "getClientById", targetNamespace = "http://soap.provider.oauth.openexchange.com", className = "com.openexchange.oauth.provider.soap.GetClientById")
    @WebMethod(action = "urn:getClientById")
    @ResponseWrapper(localName = "getClientByIdResponse", targetNamespace = "http://soap.provider.oauth.openexchange.com", className = "com.openexchange.oauth.provider.soap.GetClientByIdResponse")
    public com.openexchange.oauth.provider.soap.Client getClientById(
        @WebParam(name = "clientId", targetNamespace = "http://soap.provider.oauth.openexchange.com")
        java.lang.String clientId
    ) throws OAuthClientServiceException_Exception;

    @WebResult(name = "return", targetNamespace = "http://soap.provider.oauth.openexchange.com")
    @Action(input = "urn:revokeClientSecret", output = "urn:revokeClientSecretResponse", fault = {@FaultAction(className = OAuthClientServiceException_Exception.class, value = "urn:revokeClientSecretOAuthClientServiceException")})
    @RequestWrapper(localName = "revokeClientSecret", targetNamespace = "http://soap.provider.oauth.openexchange.com", className = "com.openexchange.oauth.provider.soap.RevokeClientSecret")
    @WebMethod(action = "urn:revokeClientSecret")
    @ResponseWrapper(localName = "revokeClientSecretResponse", targetNamespace = "http://soap.provider.oauth.openexchange.com", className = "com.openexchange.oauth.provider.soap.RevokeClientSecretResponse")
    public com.openexchange.oauth.provider.soap.Client revokeClientSecret(
        @WebParam(name = "clientId", targetNamespace = "http://soap.provider.oauth.openexchange.com")
        java.lang.String clientId
    ) throws OAuthClientServiceException_Exception;

    @WebResult(name = "return", targetNamespace = "http://soap.provider.oauth.openexchange.com")
    @Action(input = "urn:disableClient", output = "urn:disableClientResponse", fault = {@FaultAction(className = OAuthClientServiceException_Exception.class, value = "urn:disableClientOAuthClientServiceException")})
    @RequestWrapper(localName = "disableClient", targetNamespace = "http://soap.provider.oauth.openexchange.com", className = "com.openexchange.oauth.provider.soap.DisableClient")
    @WebMethod(action = "urn:disableClient")
    @ResponseWrapper(localName = "disableClientResponse", targetNamespace = "http://soap.provider.oauth.openexchange.com", className = "com.openexchange.oauth.provider.soap.DisableClientResponse")
    public java.lang.Boolean disableClient(
        @WebParam(name = "clientId", targetNamespace = "http://soap.provider.oauth.openexchange.com")
        java.lang.String clientId
    ) throws OAuthClientServiceException_Exception;
}
